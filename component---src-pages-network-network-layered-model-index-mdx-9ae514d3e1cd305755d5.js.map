{"version":3,"sources":["webpack:///./src/pages/network/network-layered-model/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","style","background","src","alt","isMDXComponent"],"mappings":"4RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAGA,QAAQ,KAAX,sHAKA,qBAAG,iCAAKC,WAAW,KAAQ,CACvB,IAAO,iMACP,IAAO,WAEX,6BACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,aACXH,QAAQ,KAFX,oDAKA,+BACA,YAAC,IAAD,CAAGE,MAAO,CACRC,WAAY,aACXH,QAAQ,KAFX,iLAQA,6BACA,YAAC,IAAD,CAAGE,MAAO,CACRC,WAAY,aACXH,QAAQ,KAFX,kHAOA,6BACA,YAAC,IAAD,CAAGE,MAAO,CACRC,WAAY,aACXH,QAAQ,KAFX,gFAMA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,UAIf,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAMN,6BACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,aACXH,QAAQ,KAFX,oFAIoC,uBAJpC,iHASA,mBAAKI,IAAI,iMAAiMC,IAAI,UAAUH,MAAO,CAC7N,SAAY,WAMlBL,EAAWS,gBAAiB","file":"component---src-pages-network-network-layered-model-index-mdx-9ae514d3e1cd305755d5.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bytedance/Desktop/gatsby/src/components/BlogLayout/index.js\";\nimport P from '../../../components/Panel.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <P mdxType=\"P\">\n网络分层的核心思想是分而治之,自下而上,将复杂的网络通信划分出多个层次,每个层次各司其职。\n常见的体系划分有OSI更精细的七层划分,TCP/IP的四层划分,以及为更方便理解TCP/IP分层而延伸的五层划分。 \n它们的对应关系如下：\n    </P>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20200626095402220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"网络分层\"\n      }}></img></p>\n    <h3>{`物理层`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n物理层为设备之间的数据通信提供传输媒体及互连设备,为数据传输提供可靠的环境,数据传输单位是比特。\n    </P>\n    <h3>{`数据链路层`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n数据链路层定义了在相邻两个节点的链路上如何传输数据。\n上层下放的IP数据报会在这一层被封装成带有数据和必要控制信息(同步信息,地址信息,差错控制)的帧在链路上传输。\n通过必要控制信息,接收端不仅可以清楚每一帧的起止,提取数据部分上交网络(际)层,还能具备一定的纠错能力。\n至于纠错方式,十分的简单粗暴：直接丢弃差错帧,避免无效传输造成的资源浪费。\n    </P>\n    <h3>{`网络层`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n网络层的目的是实现两个通信主机间数据的透明传送。\n在TCP/IP体系中,网络层使用IP协议,上层下放的报文段(TCP)或用户数据报(UDP)会被封装成分组,也叫IP数据报。\n通过IP协议完成路由寻址,精确找到目标通信主机\n    </P>\n    <h3>{`传输层`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n传输层负责向两个主机中进程之间的通信提供服务,保证数据在IP地址标记的两点之间可靠地传输。\n在这一层有两个都很常用的协议,TCP和UDP,主要差异如下：\n    </P>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`有无状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否可靠`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`数据传输形式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`收发是否有序`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`传输单位`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`可否直发数据`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`TCP`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`有`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`连续字节流`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`收发皆有序`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`报文段`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`否,需建立连接`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`UDP`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`无`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`否`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分散的小数据包`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`发有序,收无序`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`用户数据报`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`可,无需建立连接`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3>{`应用层`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n应用层直接和应用程序接口并提供常见的网络应用服务,这一层的数据交互单元称为报文。\n常见的应用层协议有DNS,HTTP,SMTP,FTP,Telnet、SSH...<br />\n如下图所示:两台主机通过HTTP的通信过程其实就是一个数据发送和接收的过程。\n上层应用每一层都添加本层的专有数据后,层层打包,并依赖下层服务发送。\n接收过程与之相反,下层接收并拆解数据包,获取数据后为上层应用提供服务。\n    </P>\n    <img src=\"https://img-blog.csdnimg.cn/20200626120103804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\" alt=\"应用层数据传输\" style={{\n      \"cssFloat\": \"left\"\n    }} />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}