{"version":3,"sources":["webpack:///./src/utils/i18n.js","webpack:///./src/components/BlogLayout/Translations.js","webpack:///./src/components/BlogLayout/index.js","webpack:///./i18n.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/pages/cors/index.mdx"],"names":["codeToLanguage","code","supportedLanguages","replace","Translations","render","this","props","translations","lang","languageLink","editUrl","className","Panel","style","fontFamily","length","map","l","i","Fragment","key","to","href","target","rel","React","Component","BlogLayout","console","log","pageContext","children","location","previous","next","siteTitle","get","langKey","slug","slice","sort","a","b","require","loadFontsForCode","rawSlug","targetLang","createLanguageLink","enSlug","Layout","title","SEO","frontmatter","description","spoiler","date","marginLeft","marginRight","maxWidth","rhythm","color","scale","display","marginBottom","marginTop","formatPostDate","flexWrap","justifyContent","listStyle","padding","fields","query","data","queryData","exports","en","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","Object","keys","indexOf","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","background","isMDXComponent"],"mappings":"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","file":"component---src-pages-cors-index-mdx-88994d3cd3dc671fe579.js","sourcesContent":["import { supportedLanguages } from './../../i18n';\r\nimport whitelist from './whitelist';\r\n\r\n// This is kind of a mess for some languages.\r\n// Try to be as short as possible.\r\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\r\n// Some resources:\r\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\r\n// https://www.w3.org/International/articles/language-tags/\r\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\r\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\r\n\r\nexport const codeToLanguage = code =>\r\n  supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\r\n\r\nexport const loadFontsForCode = code => {\r\n  switch (code) {\r\n    case 'ru':\r\n    case 'bg':\r\n      require('../fonts/fonts-shared.cyrillic.css');\r\n      require('../fonts/fonts-post.cyrillic.css');\r\n      break;\r\n    case 'uk':\r\n      require('../fonts/fonts-shared.cyrillic.css');\r\n      require('../fonts/fonts-post.cyrillic.css');\r\n      require('../fonts/fonts-shared.latin-ext.css');\r\n      require('../fonts/fonts-post.latin-ext.css');\r\n      break;\r\n    case 'cs':\r\n    case 'da':\r\n    case 'de':\r\n    case 'es':\r\n    case 'fi':\r\n    case 'fr':\r\n    case 'he':\r\n    case 'hu':\r\n    case 'it':\r\n    case 'nl':\r\n    case 'no':\r\n    case 'pl':\r\n    case 'pt-br':\r\n    case 'sk':\r\n    case 'sr':\r\n    case 'sq':\r\n    case 'sv':\r\n    case 'tr':\r\n      require('../fonts/fonts-shared.latin-ext.css');\r\n      require('../fonts/fonts-post.latin-ext.css');\r\n      break;\r\n    case 'vi':\r\n      require('../fonts/fonts-shared.vietnamese.css');\r\n      require('../fonts/fonts-post.vietnamese.css');\r\n      break;\r\n    case 'fa':\r\n      require('../fonts/fonts-post.persian.css');\r\n      break;\r\n    case 'ar':\r\n      require('../fonts/fonts-post.arabic.css');\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n// TODO: the curried signature is weird.\r\nexport const createLanguageLink = (slug, lang) => {\r\n  const rawSlug = slug.replace(`${lang}/`, '');\r\n\r\n  return targetLang =>\r\n    targetLang === 'zh-hans' ? rawSlug : `${targetLang}${rawSlug}`;\r\n};\r\n\r\nexport const replaceAnchorLinksByLanguage = (html, code) => {\r\n  // Match any link using https://regexr.com/4airl\r\n  const matches = html.match(/https?:\\/\\/(www)?[^\\/\\s)\"?]+/gm); // eslint-disable-line\r\n\r\n  // Return same html if no matches were found\r\n  // or code isn't supported\r\n  if (!matches || !supportedLanguages[code]) {\r\n    return html;\r\n  }\r\n\r\n  matches.forEach(url => {\r\n    // Replace to locale url if and only if exists in whitelist\r\n    // and has code registered\r\n    if (whitelist[url] && whitelist[url][code]) {\r\n      html = html.replace(url, whitelist[url][code]);\r\n    }\r\n  });\r\n\r\n  return html;\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport '../../fonts/fonts-post.css';\r\nimport Panel from '../Panel';\r\nimport {\r\n  codeToLanguage,\r\n} from '../../utils/i18n';\r\n\r\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\r\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\r\n\r\nclass Translations extends React.Component {\r\n    render() {\r\n      let { translations, lang, languageLink, editUrl } = this.props;\r\n  \r\n      return (\r\n        <div className=\"translations\">\r\n          <Panel style={{ fontFamily: systemFont }}>\r\n            {translations.length > 0 && (\r\n              <>\r\n                <span>Translated by readers into: </span>\r\n                {translations.map((l, i) => (\r\n                  <React.Fragment key={l}>\r\n                    {l === lang ? (\r\n                      <b>{codeToLanguage(l)}</b>\r\n                    ) : (\r\n                      <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\r\n                    )}\r\n                    {i === translations.length - 1 ? '' : ' • '}\r\n                  </React.Fragment>\r\n                ))}\r\n              </>\r\n            )}\r\n            {lang !== 'zh-hans' && (\r\n              <>\r\n                  <br />\r\n                  <br />\r\n                  <Link to={languageLink('zh-hans')}>Read the original</Link>\r\n                  {' • '}\r\n                  <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      Improve this translation\r\n                  </a>\r\n                  {' • '}\r\n                  <Link to={`/${lang}`}>View all translated posts</Link>{' '}\r\n              </>\r\n            )}\r\n          </Panel>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Translations;","import React from \"react\"\nimport { Link, graphql, StaticQuery } from \"gatsby\"\nimport get from \"lodash/get\"\n\nimport \"../../fonts/fonts-post.css\"\nimport Layout from \"../Layout\"\nimport SEO from \"../SEO\"\nimport Translations from \"./Translations\"\nimport { formatPostDate } from \"../../utils/helpers\"\nimport { rhythm, scale } from \"../../utils/typography\"\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n} from \"../../utils/i18n\"\n\nconst GITHUB_USERNAME = \"gaearon\"\nconst GITHUB_REPO_NAME = \"overreacted.io\"\n\nclass BlogLayout extends React.Component {\n  render() {\n    console.log(this.props)\n\n    let {\n      pageContext,\n      children,\n      location,\n\n      // TODO: 不存在的\n      previous,\n      next,\n      translations,\n    } = this.props\n    const siteTitle = get(this.props, \"queryData.site.siteMetadata.title\")\n    const lang = pageContext.langKey\n    const slug = pageContext.slug\n    // const timeToRead = 0;\n\n    if (translations) {\n      translations = translations.slice()\n      translations.sort((a, b) => {\n        return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1\n      })\n    }\n\n    loadFontsForCode(lang)\n\n    const languageLink = createLanguageLink(slug, lang)\n    // eg: /en/data-post/\n    const enSlug = languageLink(\"en\")\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n      1,\n      enSlug.length - 1\n    )}/index${lang === \"zh-hans\" ? \"\" : \".\" + lang}.md`\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={pageContext.frontmatter.title}\n          description={pageContext.frontmatter.spoiler}\n          slug={slug}\n          date={pageContext.frontmatter.date}\n        />\n        <div\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: rhythm(24),\n          }}\n        >\n          <article>\n            <header>\n              <h1 style={{ color: \"var(--textTitle)\" }}>\n                {pageContext.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: \"block\",\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(pageContext.frontmatter.date, lang)}\n                {/* {` • ${formatReadingTime(timeToRead)}`} */}\n              </p>\n              {translations && translations.length > 0 && (\n                <Translations\n                  translations={translations}\n                  editUrl={editUrl}\n                  languageLink={languageLink}\n                  lang={lang}\n                />\n              )}\n            </header>\n            <div>{children}</div>\n          </article>\n          <aside>\n            <nav>\n              <ul\n                style={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  listStyle: \"none\",\n                  padding: 0,\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link\n                      to={previous.fields.slug}\n                      rel=\"prev\"\n                      style={{ marginRight: 20 }}\n                    >\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          </aside>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              author\n            }\n          }\n        }\n      `}\n      render={data => <BlogLayout queryData={data} {...props} />}\n    />\n  )\n}\n","// Please keep keys lowercase!\r\nexports.supportedLanguages = {\r\n  en: 'English',\r\n  'zh-hans': '简体中文',\r\n  // ru: 'Русский',\r\n  // tr: 'Türkçe',\r\n  // es: 'Español',\r\n  // ko: '한국어',\r\n  // sv: 'Svenska',\r\n  // it: 'Italiano',\r\n  // id: 'Bahasa Indonesia',\r\n  // 'pt-br': 'Português do Brasil',\r\n  // pl: 'Polski',\r\n  // 'zh-hant': '繁體中文',\r\n  // ja: '日本語',\r\n  // fr: 'Français',\r\n  // he: 'עברית',\r\n  // hu: 'Magyar',\r\n  // vi: 'Tiếng Việt',\r\n  // th: 'ไทย',\r\n  // my: 'မြန်မာဘာသာ',\r\n  // sk: 'Slovenčina',\r\n  // te: 'తెలుగు',\r\n  // uk: 'Українська',\r\n  // bg: 'Български',\r\n  // cs: 'Čeština',\r\n  // de: 'Deutsch',\r\n  // nl: 'Nederlands',\r\n  // nb: 'Norsk',\r\n  // fa: 'فارسی',\r\n  // ar: 'العربية',\r\n  // sr: 'srpski',\r\n};\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/lengy/Desktop/gatsby-blog/src/components/BlogLayout/index.js\";\nimport P from '../../components/Panel.js';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3>{`简单请求和复杂请求`}</h3>\n    <P mdxType=\"P\"> \ncors分为简单请求和复杂请求，对于简单请求的限制较少，对于复杂请求的限制较多。\n对于简单请求，基本上设置一个响应头Access-Control-Allow-Origin足矣，不会发探测请求(options)。\n而对于复杂请求，往往需要一些额外的响应头的处理，会发探测请求。\n那简单请求和复杂请求是如何划分的呢？先看下什么是简单请求:\n    </P>\n    <p><strong parentName=\"p\">{`请求方法为以下3种:`}</strong></p>\n    <P mdxType=\"P\">HEAD、GET、POST </P>\n    <p><strong parentName=\"p\">{`请求头为以下3种:`}</strong></p>\n    <P mdxType=\"P\"> \n    Accept 期望返回格式<br />\n    Accept-Language 期望返回的语言<br />\n    Content-Type 决定文件接收方如何解析<br />\n    其中Content-Type只能是:text/plain、multipart/form-data 或 application/x-www-form-urlencoded<br />\n    这也就意味着:application/json 不是简单请求\n    </P>\n    <p><strong parentName=\"p\">{`除此之外的，都视为复杂请求`}</strong></p>\n    <h3>{`options`}</h3>\n    <p><strong parentName=\"p\">{`只有复杂请求会发送options请求`}</strong></p>\n    <P mdxType=\"P\">\n      <p>{`可使用Access-Control-Max-Age 设置options请求发送时间间隔 Access-Control-Max-Age: 600 (10分钟)`}<br />{`\nAccess-Control-Max-Age表示Access-Control-Allow-Origin和Access-Control-Allow-Headers的缓存时长)`}<br />{`\n在 Firefox 中，上限是24小时 （即 86400 秒）。)`}<br />{`\n在 Chromium v76 之前， 上限是 10 分钟（即 600 秒)。)`}<br />{`\n从 Chromium v76 开始，上限是 2 小时（即 7200 秒)。)`}<br />{`\nChromium 同时规定了一个默认值 5 秒。)`}<br />{`\n如果值为 -1，表示禁用缓存，则每次请求前都需要使用 OPTIONS 预检请求。`}</p>\n    </P>\n    <h3>{`复杂请求的限制`}</h3>\n    <P style={{\n      background: 'pink'\n    }} mdxType=\"P\">\n对于复杂请求限制主要体现在两个方面:方法限制和请求头限制<br />\n对于前者，后端可通过设置Access-Control-Allow-Methods，允许指定方法跨域，多个值则用逗号隔开 'PUT,DELETE'<br />\n对于后者，后端可通过设置Access-Control-Allow-Headers，允许指定头跨域，多个值则用逗号隔开 'xxx,yyy'\n    </P>\n    <h3>{`跨域携带cookie`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n默认情况下，不论是fetch还是axios,都不会跨域携带cookie。<br />\n如果允许携带cookie,那后端设置的Access-Control-Allow-Origin和其他头的值不能是*，要具体指定<br />\n如果允许携带cookie,需要后端设置Access-Control-Allow-Credentials为true<br />\n    </P>\n    <p><strong parentName=\"p\">{`fetch默认会忽略cookie的发送`}</strong></p>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\nomit:默认值，忽略cookie的发送<br />\nsame-origin:表示cookie只能同域发送，不能跨域发送<br />\ninclude:既可以同域发送，也可以跨域发送\n    </P>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\n fetch('http://localhost:3000/api/',{\n            headers:{\n                token:'xxx'\n            },\n            credentials: 'include'\n        }).then(res => {\n            return res.json()\n        }).then(res => {\n            console.log(res)\n  })\n\n`}</code></pre>\n    <p><strong parentName=\"p\">{`axios默认不允许跨域携带cookie`}</strong></p>\n    <P style={{\n      background: '#4AC29A'\n    }} mdxType=\"P\">\n可通过设置:axios.defaults.withCredentials = true;改变\n    </P>\n    <h3>{`后端跨域设置`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const app = new (require('koa'))\napp.use((ctx) => {\n   // ctx.set('Access-Control-Allow-Origin', '*')\n    ctx.set('Access-Control-Allow-Origin', ctx.headers.origin)\n    ctx.set('Access-Control-Allow-Credentials',true)\n    // ctx.set('Access-Control-Allow-Headers', '*')\n    ctx.set('Access-Control-Allow-Headers', 'token')\n    // ctx.set('Access-Control-Allow-Methods', 'PUT,DELETE')\n    ctx.set('Access-Control-Allow-Methods', '*')\n    ctx.set('Access-Control-Max-Age', 60)//1分钟内不再发options请求\n    ctx.set('Set-Cookie', 'token=xxxyyyzzz')\n    ctx.body = { name: \"tom\" }\n})\n\napp.listen(3000, () => {\n    console.log('run server')\n})\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}