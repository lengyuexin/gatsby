(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{mtRM:function(n,t,e){"use strict";e.r(t),e.d(t,"_frontmatter",(function(){return s})),e.d(t,"default",(function(){return r}));e("rGqo"),e("yt8O"),e("Btvt"),e("RW0V"),e("91GP"),e("q1tI");var b=e("7ljp"),o=e("Hv6d"),c=e("JLKy");var s={},l={_frontmatter:s},i=o.a;function r(n){var t=n.components,e=function(n,t){if(null==n)return{};var e,b,o={},c=Object.keys(n);for(b=0;b<c.length;b++)e=c[b],t.indexOf(e)>=0||(o[e]=n[e]);return o}(n,["components"]);return Object(b.b)(i,Object.assign({},l,e,{components:t,mdxType:"MDXLayout"}),Object(b.b)(c.a,{mdxType:"P"},"this指向动作发生的主体，与定义位置和调用位置无关。 浏览器环境下，全局this指向window。 node环境下，全局this指向一个空对象","。"),Object(b.b)("h2",null,"this的判断规则"),Object(b.b)(c.a,{style:{background:"lightblue"},mdxType:"P"},Object(b.b)("p",null,"函数执行若以xxx.fn()形式调用，则.前的xxx为this指向",Object(b.b)("br",null),"\n函数执行若以fn()形式调用，则this指向全局",Object(b.b)("br",null),"\n自执行函数的this永远指向全局",Object(b.b)("br",null),"\n给元素某个事件绑定方法，事件触发，该方法的this指向绑定的元素",Object(b.b)("br",null),"\n箭头函数没有自己的this,会沿着作用域链向上查找最近一层的this")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"代码示例")),Object(b.b)(c.a,{style:{background:"#FDB99B"},mdxType:"P"},Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"function fn(){\n    console.log(this)\n}\nvar obj={fn}\n\nfn();//this=>global\nobj.fn//this->obj \n\nfunction f(){\n    fn()//this=>global\n}\nf();\n\nvar user={\n    say(){\n        fn()//this=>global\n    }\n}\nuser.say()\n\n(function(){\n    fn();//this=>global\n})()\n\ndocument.body.onclick=fn //this=>body\ndocument.body.onclick=function(){\n    fn();//this=>global\n}\n\n\n\n\n\n"))))}r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-js-core-this-index-mdx-73fd8f14377fbb96479f.js.map