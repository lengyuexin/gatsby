{"version":3,"sources":["webpack:///./src/pages/serverless/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-serverless-index-mdx-b6a0a5cc9d0c0fc0f188.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bytedance/Desktop/gatsby/src/components/BlogLayout/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Serverless是什么`}</h2>\n    <p>{`从单词角度理解,server译为服务，less译为少，Serverless可以理解为无服务或轻服务。`}</p>\n    <p>{`从语义角度理解，之所以叫轻服务，是因为和传统的PaaS(平台即服务)相比，用户不需要关心服务器的部署与配置。但这并不意味着不需要服务器，只是这些东西皆由云平台来提供。`}</p>\n    <p>{`从架构角度理解，Serverless=FaaS+事件驱动+BaaS=无服务器计算(Serverless computing)`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Faas:Function as a Service,函数即服务`}</li>\n      <li parentName=\"ul\">{`事件驱动：通过事件触发的形式去完成函数的调用，处理请求和响应（如定时任务/http请求...）`}</li>\n      <li parentName=\"ul\">{`Baas:Backend as a Service 后端即服务`}</li>\n    </ul>\n    <h2>{`云计算发展过程`}</h2>\n    <p>{`下图为云计算发展的整个过程，同时也是Serverless的发展过程，共分为四个阶段。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217142302645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <p><strong parentName=\"p\">{`物理机阶段`}</strong>{`：此时如果进行一个网站的开发是极为麻烦的，不仅需要购置物理机，还要手动安装各种运行环境，开发，部署，测试，上线。除此之外，还要在物理层面上解决电，网，硬件磨损等各种问题。`}</p>\n    <p><strong parentName=\"p\">{`IaaS阶段`}</strong>{`：IaaS指的是基础设施即服务。随着虚拟化技术的不断发展，出现了很多基于虚拟化的云厂商和产品，如阿里云ESC。这个阶段，无需自建机房，采购以及配置硬件设施，云平台会提供这些基础设施。也正因如此，那些物理层面的电，硬件磨损什么的，用户无需关注。`}</p>\n    <p><strong parentName=\"p\">{`PaaS阶段`}</strong>{`：PaaS指的是平台即服务。所谓的平台，其实是结合业务发展，在IaaS基础上，将一些如数据库，中间件等通用功能做成服务。虚拟化技术可以让用户不必关心硬件问题，后来出现的容器技术可以让用户不必关心运行环境差异的问题。容器技术出现后，意味着服务器上部署的不再是应用，而是容器。当容器多了后，可通过k8s进行管理。`}</p>\n    <p><strong parentName=\"p\">{`Serverless阶段`}</strong>{`：这个阶段是真正解放生产，专注业务的阶段。在FaaS层面，应用由诸多个独立的函数组成，每个函数实现各自的业务逻辑。在数据获取层面，BaaS 将后端能力封装成了服务，并以接口的形式提供给FaaS。事实上，数据库的增删改查刚好对应Restful API的POST/DELETE/PUT/GET。`}</p>\n    <h2>{`Serverless的优势`}</h2>\n    <p><strong parentName=\"p\">{`专注业务，快速迭代`}</strong></p>\n    <p>{`首先，云平台从开发人员手中接过服务部署，配置等运维工作，开发人员压力减小，只需关注业务开发本身即可。其次，传统开发模式下，一个完整的开发流程需要经过前后端并行开发，后端部署，联调测试，上线等过程，比较繁杂。而Serverless可以让前端人员跨过server直接和数据库交互(FaaS+BaaS)，极大地简化了开发流程。`}</p>\n    <p><strong parentName=\"p\">{`节省维护和运营成本`}</strong></p>\n    <p>{`服务提供方无需在业务上线前预估资源，也无需单独购置服务器。Serverless会根据实际请求数量进行自动扩缩容，实行按需计费。在空闲情况下，凭借短时间内完成冷启动的优势，Serverless可以缩容的极致为0，即无任何计算消耗，这也是PaaS做不到的。从这点上考虑，那些每天大部分时间都没有流量或者有很少流量的应用是极为适合Serverless落地的。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217142355722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <h2>{`Serverless的不足`}</h2>\n    <p><strong parentName=\"p\">{`状态管理能力弱(针对FaaS)`}</strong></p>\n    <p>{`为了保证可以自动扩缩容，FaaS应用就必须是无状态的。有状态的服务就要考虑数据的存储，需要BaaS的支持。`}</p>\n    <p><strong parentName=\"p\">{`调试困难`}</strong></p>\n    <p>{`本地环境和云环境始终是有区别的，有些报错信息只能在云环境查看，而且某些问题不太容易定位是本地环境还是云环境的产生的。`}</p>\n    <h2>{`云函数`}</h2>\n    <p><strong parentName=\"p\">{`定义`}</strong></p>\n    <p>{`云函数可以看作是Serverless的产品之一，每一个函数都可以看作是一个服务。`}</p>\n    <p>{`与此同时，云函数也具备FaaS能力，是FaaS模式的具体实现。`}</p>\n    <p><strong parentName=\"p\">{`触发器`}</strong></p>\n    <p>{`触发器用于触发某一类事件，不同云平台支持的触发器类型也可能不同，但基本上每个云平台都会包含HTTP触发器和定时触发器两大类型。`}</p>\n    <p>{`HTTP触发器对于客户端而言，就是一个可访问的数据接口。`}</p>\n    <p>{`定时任务类型的触发器,会在指定时间周期内执行某一任务。`}</p>\n    <p>{`为限制频繁调用，几乎所有云平台都会对定时的时间粒度进行限制，如最小一分钟。`}</p>\n    <p><strong parentName=\"p\">{`体验`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://main.qcloudimg.com/raw/document/product/pdf/583_9177_cn.pdf\"\n        }}>{`doc`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cloud.tencent.com/login?s_url=https://console.cloud.tencent.com/scf/list?rid=1&ns=default\"\n        }}>{`scf`}</a></li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217142537639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <h3>{`冷启动`}</h3>\n    <p><strong parentName=\"p\">{`定义`}</strong></p>\n    <p>{`在Serverless computing世界中，函数是按需运行的，如果没有请求，就不会有函数实例占用函数服务资源。这种仅在必要时运行函数的整个执行过程，被称为冷启动。`}</p>\n    <p>{`下图为冷启动包含的阶段以及云厂商和开发者各自所负责的部分。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217142616199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`下载代码：`}</strong>{` FaaS 平台本身不会存储代码，这也是为了能够缩容到0。上传或自己编写的代码实际上会被放在存储服务中，在冷启动过程中会从存储服务中获取函数代码后下载。`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`启动容器：`}</strong>{` 代码下载完成后，FaaS 会根据函数的配置，启动对应容器。也正是通过容器技术，FaaS 可保证每个函数的独立性。`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`初始化运行环境：`}</strong>{` 分析代码依赖、执行用户初始化逻辑、初始化入口函数之外的代码等。`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`运行代码：`}</strong>{` 调用入口函数执行代码。这个阶段比较特别，可能是冷启动，也可能是热启动。`}</li>\n    </ul>\n    <h3>{`热启动`}</h3>\n    <p>{`FaaS有两种模式，一种是用完即毁，对应从0到1的冷启动。`}</p>\n    <p>{`另一种是常驻内存，对应函数实例可复用的热启动（串行）。`}</p>\n    <p>{`常驻不是永久，如果一段时间内没有事件触发，函数实例还是会被销毁的。`}</p>\n    <p>{`热启动虽然在一定程度上可以提高请求处理效率和应用性能，但某些情况下也要特别注意，热启动可能不是我们想要的。`}</p>\n    <p>{`在某些涉及时间的场景，我们需要将时间的生成放在入口函数中用以保证每次函数执行后时间重新计算。如果这部分代码放在入口函数之外，那么在最初冷启动后，热启动使用的一直就是旧的时间，且不会更新。`}</p>\n    <p><strong parentName=\"p\">{`请求响应链路`}</strong></p>\n    <p>{`解释完冷启动后，再来看一下完整的请求响应链路。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/2021021714265361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <ol>\n      <li parentName=\"ol\">{`用户发起请求，触发器接收`}</li>\n      <li parentName=\"ol\">{`事件驱动，触发器通知函数服务处理http请求`}</li>\n      <li parentName=\"ol\">{`函数服务进行函数实例检查，有则调用，没有则从函数代码仓库拉取后创建再调用`}</li>\n      <li parentName=\"ol\">{`函数将处理完的结果交给触发器`}</li>\n      <li parentName=\"ol\">{`触发器将其响应到客户端用户`}</li>\n      <li parentName=\"ol\">{`一段时间内若无事件触发，FaaS应用缩容至0`}</li>\n    </ol>\n    <h3>{`函数实例`}</h3>\n    <p>{`每一个函数实例背后都是一个容器。FaaS 通过容器来隔离每个函数实例，保证函数的独立性。`}</p>\n    <p>{`如下图所示，容器内最主要的是运行环境，包含编程语言，内置模块，FaaS 内置依赖和函数代码。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217142857728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`编程语言`}</strong>{`：创建FaaS应用所指定的语言，如Node`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`内置模块`}</strong>{`：所选编程语言的内置模块，如fs之于Node`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`FaaS 内置依赖`}</strong>{`：FaaS平台为便于开发者开发提供的某些默认依赖`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`函数代码`}</strong>{`：自己编写的代码`}</li>\n    </ul>\n    <h3>{`不同语言冷启动时长排名`}</h3>\n    <p>{`不同语言的冷启动时长是有差异的，下图为不同语言的冷启动时长排名。`}</p>\n    <p>{`横坐标为分配的内存空间，纵坐标为平均冷启动时长，单位ms`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217142930819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <p>{`从上图我们可以看到两个关键信息：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`分配的内存空间越大，冷启动时长越短`}</li>\n      <li parentName=\"ul\">{`Nodejs冷启动时间是最短的`}</li>\n    </ul>\n    <h3>{`首次调用超时`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`冷启动快慢时长差距还是很明显的，从毫秒级到秒级甚至分钟级皆有可能。`}</li>\n      <li parentName=\"ul\">{`对于Node这种能够短时间内完成冷启动的语言来说，一定程度上就是FaaS应用敢缩容到0的底气。`}</li>\n      <li parentName=\"ul\">{`但是像java这种冷启动时间比较久的语言，就有可能出现首次调用超时的问题。`}</li>\n    </ul>\n    <h3>{`性能优化`}</h3>\n    <p>{`Serverless性能瓶颈主要在冷启动耗时上，所以性能优化也是从这方面入手。`}</p>\n    <p><strong parentName=\"p\">{`预热：`}</strong>{` 其本质是将冷启动提前`}<strong parentName=\"p\">{`。`}</strong>{`使用热启动的方式对要执行的函数进行提前触发，用以完成耗时的冷启动过程。这样在某个流量峰值，运行的代码就都是热启动的形式，处理效率和应用性能提高。`}</p>\n    <p><strong parentName=\"p\">{`减小代码体积：`}</strong>{` 函数应用实例收缩到0后，当有新的请求到来，需要下载代码。如果代码体积太大，这个过程就会十分耗时。通过压缩，按需引入等方式对代码进行精简，可减少冷启动耗时。`}</p>\n    <p><strong parentName=\"p\">{`提高并发配额：`}</strong>{` 默认情况下一个函数实例只能处理一个请求，但可通过提高并发配额进而提高函数的处理能力。如额度为3，则一个函数实例现在可处理三个请求，相比之前少了两次冷启动的过程。 并发限制数量取决于分配的内存大小，对于腾讯云来说，128内存下，最大并发为900。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217143003725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <p><strong parentName=\"p\">{`选择冷启动耗时少的语言 ：`}</strong>{` 如node,python`}</p>\n    <h2>{`SFF`}</h2>\n    <p>{`BFF(Backend For Frontend)和SFF(Serverless For Frontend)解决的是同一个问题，作为前后端数据通信的中间层，把后端返回的不符合前端预期的元数据转成前端预期的数据格式。`}</p>\n    <p>{`出现这种非预期格式的元数据，大多是微服务导致的(一个后端接口数据来自多个后端应用)。`}</p>\n    <p>{`相比BFF,SFF用完即毁的特点体现的更明显：请求-转换-响应-空闲-缩容为0。`}</p>\n    <p>{`从这点考虑Serverless也适合用于中间层数据处理。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://img-blog.csdnimg.cn/20210217143026374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODEzNDkx,size_16,color_FFFFFF,t_70\",\n        \"alt\": \"在这里插入图片描述\"\n      }}></img></p>\n    <h2>{`BaaS`}</h2>\n    <p>{`FaaS适用于那些无状态场景，而涉及数据存储等有状态的场景，就需要BaaS的支持。`}</p>\n    <p>{`举个例子，计算PV（page view）.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let pv = 0;\n\nfunction handler(event) {\n\n  pv++;\n\n  return pv;\n\n}\n`}</code></pre>\n    <p>{`对于FaaS来说，这种统计其实并不精准。如果一段时间没有新的事件触发，函数执行完后，它的运行环境就会被销毁，函数实例收缩为0。当下一次请求过来时，函数应用会创建一个新的实例，该实例会初始化一个新的运行环境，之前的状态不会被保留。`}</p>\n    <p>{`这种情况下，就需要BaaS的配合了。BaaS服务于FaaS ，可以让FaaS通过接口调用形式来使用 BaaS，完成存储数据，比如阿里云的表格存储（相当于一个NoSQL数据库）。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const tablestore = require('tablestore');\n\nasync function handler(event) {\n\n  let pv = await tablestore.get();\n\n  pv += 1;\n\n  await tablestore.save(pv);\n\n  return pv;\n\n}\n`}</code></pre>\n    <p>{`这样入库后，即使FaaS应用收缩为0，统计数据也不会受到影响。`}</p>\n    <h2>{`再会`}</h2>\n    <p>{`情如风雪无常,`}</p>\n    <p>{`却是一动既殇。`}</p>\n    <p>{`感谢你这么好看还来阅读我的文章,`}</p>\n    <p>{`我是冷月心,下期再见。`}</p>\n    <h2>{`推荐阅读`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://juejin.cn/post/6892728697082609672\"\n        }}>{`结合阿里云 FC 谈谈我对 FaaS 的理解 `}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.infoq.cn/article/7flvicetoviyajkmgb1c\"\n        }}>{`AWS Lambda 最新编程语言冷启动时间测试：Node.js 性能最高`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://time.geekbang.org/column/intro/305\"\n        }}>{`Serverless入门课`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=589#/content\"\n        }}>{`玩转 Serverless 架构`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}