{"version":3,"sources":["webpack:///./src/pages/network/http-version/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","background","isMDXComponent"],"mappings":"4RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kCACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,aACXF,QAAQ,KAFX,wGAMA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXF,QAAQ,KACT,+BAAc,uBAAd,uBACc,uBADd,eAEM,uBAFN,oCAKF,kCACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,aACXF,QAAQ,KAFX,yGAOA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXF,QAAQ,KACT,yDAAwC,uBAAxC,kBACS,uBADT,mBAEU,uBAFV,YAGG,uBAHH,+BAIsB,uBAJtB,6BAKoB,uBALpB,yBAMgB,uBANhB,YAOG,yBAEL,kCACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,aACXF,QAAQ,KAFX,+EAMA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXF,QAAQ,KAFX,qDAG8C,uBAH9C,6BAIsB,uBAJtB,YAKK,uBALL,2CAMoC,uBANpC,gCAOyB,uBAPzB,0BAUA,gCACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,aACXF,QAAQ,KAFX,sJAOA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXF,QAAQ,KAFX,yBAGkB,uBAHlB,kBAIW,uBAJX,0BAKmB,uBALnB,sBAMe,uBANf,qBAOc,uBAPd,8BAUA,8BACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXF,QAAQ,KAFX,mBAGY,uBAHZ,6BAIsB,uBAJtB,qBAKc,uBALd,2BAYJH,EAAWM,gBAAiB","file":"component---src-pages-network-http-version-index-mdx-3d50c4016db13d849418.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bytedance/Desktop/gatsby/src/components/BlogLayout/index.js\";\nimport P from '../../../components/Panel.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3>{`http 0.9`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\nhttp0.9的版本诞生在20世纪90年代初期，此时互联网也就刚处于新兴阶段，网络资源多是纯文本。\n麻雀虽小五脏俱全，此时的http已经支持客户端和服务端的通信,http0.9的出现具有划时代的意义。\n    </P>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <p>{`美中不足的是:`}<br />{`\n该版本的http协议仅支持纯文本传输`}<br />{`\n请求方式仅支持get`}<br />{`\n不支持tcp长连接，每次服务端返回响应数据后都会断开连接。`}</p>\n    </P>\n    <h3>{`http 1.0`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\nhttp1.0 是对http0.9的一个增强，但依然不支持tcp长连接。\n它形式上和我们现在常用的http相差无几，但还算不上一个实际上的标准。\n相比http0.9，http1.0 增强体现在如下方面:\n    </P>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <p>{`传输的数据除文本外，还可传输图像，音视频，是真正意义上的超文本传输`}<br />{`\n引入http header`}<br />{`\n增加 HEAD、POST请求`}<br />{`\n增加响应状态码`}<br />{`\n增加authorization权限头，cache缓存`}<br />{`\n网络文件的类型和编码规定Content-Type`}<br />{`\n压缩类型Content-Encoding`}<br />{`\n引入协议版本号`}<br /></p>\n    </P>\n    <h3>{`http 1.1`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\nhttp1.1是对http1.0的进一步完善，但它被视为一个真正意义上的标准，广泛使用至今。\n相比http1.0，http1.1 增强体现在如下方面：\n    </P>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n支持tcp长连接，同一个连接可以被多个请求复用，无需声明Connection: keep-alive<br />\n支持管线化，无需等上一次响应结束，多个请求可连续发送<br />\n增加缓存管理和控制<br />\n分块传输，断点续传的关键(Transfer-Encoding: chunked)<br />\n新增 PUT、PATCH、OPTIONS、DELETE方法<br />\n请求头新增Host字段，用来指定服务器的域名\n    </P>\n    <h3>{`http/2`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\nhttp1.1虽然被广泛使用，但并不是完美的。 管线化默认关闭，且某个请求的响应如果过慢会阻塞其他请求的响应。\n从http/2开始，http后续不再有子版本，都是大版本的变更，如http/3。http/2还未普及，即便有些网站已经支持。\n相比http1.1，http/2 增强体现在如下方面:\n    </P>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\nHTTP/2是彻底的二进制传输协议，效率更高<br />\n废弃http1.1的管线化方案<br />\n多路复用，允许并发请求，突破浏览器并发请求限制<br />\n可在不断开tcp连接情况下取消某次请求<br />\n使用专用算法压缩头部，减少数据传输量<br />\n服务器推送，允许服务器未经请求，主动向客户端发送资源\n    </P>\n    <h3>{`重要变更`}</h3>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\nhttp0.9 诞生，纯文本传输<br />\nhttp1.0 超文本传输，有HTTP header<br />\nhttp1.1 tcp长连接，管线化<br />\nhttp2 废弃管线化，二进制传输，多路复用\n    </P>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}