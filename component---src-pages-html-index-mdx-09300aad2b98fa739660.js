(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{BiVN:function(e,t,n){},EsZP:function(e,t,n){},Hv6d:function(e,t,n){"use strict";var a=n("KPh1"),r=n("qRUh"),l=n("xwgP"),c=n.n(l),b=n("Wbzz"),i=n("d33t"),s=n.n(i),o=(n("vPK/"),n("Zttt")),p=n("EYWl"),m=n("JLKy"),u=n("k7Sn"),g=function(e){return u.supportedLanguages[e].replace(/ /g," ")},d=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.translations,n=e.lang,a=e.languageLink,r=e.editUrl;return c.a.createElement("div",{className:"translations"},c.a.createElement(m.a,{style:{fontFamily:'system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",\n    "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans",\n    "Droid Sans", "Helvetica Neue", sans-serif'}},t.length>0&&c.a.createElement(c.a.Fragment,null,c.a.createElement("span",null,"Translated by readers into: "),t.map((function(e,r){return c.a.createElement(c.a.Fragment,{key:e},e===n?c.a.createElement("b",null,g(e)):c.a.createElement(b.Link,{to:a(e)},g(e)),r===t.length-1?"":" • ")}))),"zh-hans"!==n&&c.a.createElement(c.a.Fragment,null,c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement(b.Link,{to:a("zh-hans")},"Read the original")," • ",c.a.createElement("a",{href:r,target:"_blank",rel:"noopener noreferrer"},"Improve this translation")," • ",c.a.createElement(b.Link,{to:"/"+n},"View all translated posts")," ")))},t}(c.a.Component),O=n("L6NH"),j=n("p3AD");function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var y=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){console.log(this.props);var e=this.props,t=e.pageContext,a=e.children,r=e.location,l=e.previous,i=e.next,m=e.translations,u=s()(this.props,"queryData.site.siteMetadata.title"),h=t.langKey,y=t.slug;m&&(m=m.slice()).sort((function(e,t){return g(e)<g(t)?-1:1})),function(e){switch(e){case"ru":case"bg":n("EsZP"),n("s85H");break;case"uk":n("EsZP"),n("s85H"),n("Mq6Z"),n("e/YJ");break;case"cs":case"da":case"de":case"es":case"fi":case"fr":case"he":case"hu":case"it":case"nl":case"no":case"pl":case"pt-br":case"sk":case"sr":case"sq":case"sv":case"tr":n("Mq6Z"),n("e/YJ");break;case"vi":n("Vjog"),n("Pf5Y");break;case"fa":n("BiVN");break;case"ar":n("xpFW")}}(h);var N=function(e,t){var n=e.replace(t+"/","");return function(e){return"zh-hans"===e?n:""+e+n}}(y,h),v=N("en"),x="https://github.com/gaearon/overreacted.io/edit/master/src/pages/"+v.slice(1,v.length-1)+"/index"+("zh-hans"===h?"":"."+h)+".md";return c.a.createElement(o.a,{location:r,title:u},c.a.createElement(p.a,{lang:h,title:t.frontmatter.title,description:t.frontmatter.spoiler,slug:y,date:t.frontmatter.date}),c.a.createElement("div",{style:{marginLeft:"auto",marginRight:"auto",maxWidth:Object(j.a)(24)}},c.a.createElement("article",null,c.a.createElement("header",null,c.a.createElement("h1",{style:{color:"var(--textTitle)"}},t.frontmatter.title),c.a.createElement("p",{style:f(f({},Object(j.b)(-.2)),{},{display:"block",marginBottom:Object(j.a)(1),marginTop:Object(j.a)(-.8)})},Object(O.a)(t.frontmatter.date,h)),m&&m.length>0&&c.a.createElement(d,{translations:m,editUrl:x,languageLink:N,lang:h})),c.a.createElement("div",null,a)),c.a.createElement("aside",null,c.a.createElement("nav",null,c.a.createElement("ul",{style:{display:"flex",flexWrap:"wrap",justifyContent:"space-between",listStyle:"none",padding:0}},c.a.createElement("li",null,l&&c.a.createElement(b.Link,{to:l.fields.slug,rel:"prev",style:{marginRight:20}},"← ",l.frontmatter.title)),c.a.createElement("li",null,i&&c.a.createElement(b.Link,{to:i.fields.slug,rel:"next"},i.frontmatter.title," →")))))))},t}(c.a.Component);t.a=function(e){return c.a.createElement(b.StaticQuery,{query:"2199005656",render:function(t){return c.a.createElement(y,Object.assign({queryData:t},e))}})}},Mq6Z:function(e,t,n){},N5xF:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return o}));var a=n("shca"),r=(n("xwgP"),n("N0F1")),l=n("Hv6d"),c=n("JLKy"),b={},i={_frontmatter:b},s=l.a;function o(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)(s,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",null,"文档类型声明"),Object(r.b)(c.a,{mdxType:"P"},"DOCTYPE是标准通用标记语言的文档类型声明， 由于网络上文件的类型不一， 因此需要正确声明 HTML 版本, 以使得浏览器能够正确识别并显示网页内容。"),Object(r.b)("blockquote",null),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"doctype声明不区分大小写,以下形式皆可")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),"<!DOCTYPE html>\n<!DOCTYPE HTML>\n<!doctype html>\n<!Doctype Html>\n\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"有代表性的<!DOCTYPE>声明")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'HTML5时期\n<!DOCTYPE html> \n\nHTML 4.01 时期\n<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"      \n"http://www.w3.org/TR/html4/loose.dtd"> \n\nXHTML 1.0 时期\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"     \n"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> \n')),Object(r.b)("h2",null,"html5新特性"),Object(r.b)("h3",null,"语义化标签"),Object(r.b)(c.a,{mdxType:"P"},"语义化标签是为了让代码看起来更见名知义，语义清晰，本质上只是一个普通的div。"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object.assign({parentName:"tr"},{align:null})),Object(r.b)("th",Object.assign({parentName:"tr"},{align:null})))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"标签"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"语义")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"header"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"头部")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"footer"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"尾部")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"section"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"区段")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"article"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"文章")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"nav"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"导航")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"aside"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"侧边栏")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"main"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"文章主体内容")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"figure"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"独立的流内容(图像、图表、照片、代码等等)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"hgroup"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"对网页或区段（section）的标题进行组合")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"details/summary"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"标签用于描述文档或文档某个部分的细节")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"mark"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"突出显示部分文本")))),Object(r.b)(c.a,{style:{background:"#FDB99B"},mdxType:"P"},Object(r.b)("p",null,"在一个文档中，不能出现一个以上的 main元素,且main不能是以下元素的后代：article/aside/footer/header/nav ",Object(r.b)("br",null),"\n最后4个用的可能少一些，这里补充说明一下"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<figure>\n  <p>avatar</p>\n  <img src="url"/>\n</figure>\n\nhgroup可以拆开理解，h是标题的语义，group是组合，hgroup自然就是对标题进行组合\n<hgroup>\n  <h1>前端</h1>\n  <h2>HTML</h2>\n</hgroup>\n\n默认关闭子项，点击展开，再点击收起\n<details>\n    <summary>详情</summary>\n    <p>hello world</p>\n    <p>hello girl</p>\n</details>\n<p>这是<mark>突出显示</mark>的部分</p>\n'))),Object(r.b)("h3",null,"表单的丰富(部分属性需要在form标签包裹下才会生效)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"常规")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<form >\n    \x3c!--默认包含正则验证，验证失败表单无法提交--\x3e\n    邮箱： <input type="email">\n\n    \x3c!-- 自动聚焦and占位符 --\x3e\n    输入框：<input type="text" placeholder="请输入" autofocus="true">\n\n    \x3c!--tel本身不包含验证，它的出现是为了能够在移动端打开数字键盘--\x3e\n    \x3c!--required，必须输入 pattern，正则验证--\x3e\n    电话：<input type="tel" required pattern="^(\\+86)?1\\d{10}$">\n\n    \x3c!--验证只能输入合法的网址：如http://www.baidu.com--\x3e\n    网址：<input type="url">\n\n    \x3c!--number：只能输入数字(包含小数点)，\n    不能输入其它的字符 max:最大值 min:最小值 value:默认值--\x3e\n    数量：<input type="number" value="70" max="100" min="0">\n\n    \x3c!--search：可以提供更人性化的输入体验，有个x号，不想要了可以删除--\x3e\n    请输入商品名称：<input type="search">\n\n    \x3c!--range:范围，与number类似--\x3e\n    范围：<input type="range" max="100" min="0" value="50">\n\n     \x3c!--可以当个拾色器--\x3e\n    颜色：<input type="color">\n   \n    \x3c!--time:时间：时分秒--\x3e\n    时间：<input type="time">\n\n    \x3c!--date：日期：年月日--\x3e\n    日期：<input type="date">\n\n    \x3c!--datetime:大多数浏览器不能支持datetime.用于屏幕阅读器--\x3e\n    日期时间：<input type="datetime">\n\n    \x3c!--datetime-local:日期和时间--\x3e\n    日期时间：<input type="datetime-local">\n    月份：<input type="month">\n    星期：<input type="week">\n  \n</form>\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"默认为true的属性")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<input type="text" autofocus>\n<input type="text" disabled>\n<input type="checkbox" checked>\n\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"新增datalist标签")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"不同浏览器表现会有些许差异，感兴趣的可以试试")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),' \x3c!--建立输入框与datalist的关联  list="datalist的id号"--\x3e\n 编程语言：<input type="text" list="language"> <br>\n \x3c!--通过datalist创建下拉列表--\x3e\n <datalist id="language">\n     \x3c!--label:提示信息--\x3e\n     <option value="java" label="老牌编程语言"/>\n     <option value="php" label="世界上最好的语言"></option>\n     <option value="node.js" label="强大的IO处理能力"></option>\n      \x3c!--option可以是单标签也可以是双标签--\x3e\n     <option value="python" label="火爆的编程语言，处理数据能力强"/>\n </datalist>\n\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"新增meter标签")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"不同浏览器显示有差异")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'\x3c!--high:规定的较高的值,low:规定的较低的值,max:最大值,min:最小值,value:当前度量值--\x3e\n<meter max="100" min="0" high="80" low="40" value="30"></meter>\n<meter max="100" min="0" high="80" low="40" value="60"></meter>\n<meter max="100" min="0" high="80" low="40" value="100"></meter>\n\n')),Object(r.b)("p",null,Object(r.b)("img",Object.assign({parentName:"p"},{src:"https://img-blog.csdnimg.cn/20190325090209752.png",alt:"meter"}))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"新增fieldset和legend标签")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),"    <fieldset>\n        <legend>冷月心个人信息</legend>\n    </fieldset>\n\n")),Object(r.b)("p",null,Object(r.b)("img",Object.assign({parentName:"p"},{src:"https://img-blog.csdnimg.cn/20190325090609784.png",alt:"fieldset和legend标签"}))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"新增progress标签")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<progress value="22" max="100"></progress>\n')),Object(r.b)("p",null,Object(r.b)("img",Object.assign({parentName:"p"},{src:"https://img-blog.csdnimg.cn/20200323105620203.png",alt:"progress"}))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"form表单提交按钮属性")),Object(r.b)(c.a,{mdxType:"P"},"formaction  指定提交按钮的地址",Object(r.b)("br",null),"formtarget 类似a标签的target",Object(r.b)("br",null),"formmethod 指定表单提交方式",Object(r.b)("br",null),"formenctype 表单提交时的编码格式"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object.assign({parentName:"tr"},{align:null}),"application/x-www-form-urlencoded"),Object(r.b)("th",Object.assign({parentName:"tr"},{align:null}),"在发送前对所有字符进行编码（默认）。"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"multipart/form-data"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"不对字符编码。当使用有文件上传控件的表单时，该值是必需的。")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"text/plain"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),'将空格转换为 "+" 符号，但不编码特殊字符。')))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"其他")),Object(r.b)(c.a,{mdxType:"P"},"control 属性，在lable标签内部放置一个表单元素，并通过该属性来访问该表单的属性",Object(r.b)("br",null),"autocomplete，控制表单提交后是否生成历史记录 on|off"),Object(r.b)("h3",null,"自定义属性规范"),Object(r.b)(c.a,{mdxType:"P"},"小写，非纯数字，不含特殊字符",Object(r.b)("br",null),"data开头,data-后必须至少有一个字符，多个单词使用-连接",Object(r.b)("br",null),"示例: data-name， data-project-name"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>自定义属性</title>\n</head>\n<body>\n<p data-user-name="冷月心"></p>\n<script>\n        const p=document.querySelector("p");\n        //必须驼峰法取值\n        console.log(p.dataset["userName"]);//冷月心\n<\/script>\n</body>\n</html>\n\n\n')),Object(r.b)("h3",null,"拖放"),Object(r.b)(c.a,{mdxType:"P"},"draggable设置元素是否可拖放，img标签默认为true",Object(r.b)("br",null),"ondragstart 开始拖放事件监听，存储数据",Object(r.b)("br",null),"ondrop 放下事件，获取ondragstart 时存储的数据并添加到目标元素",Object(r.b)("br",null),"ondragover 拖动结束事件，用于清除默认行为，否则无法实现拖放"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"网页资源拖放")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>html5拖放</title>\n    <style>\n        div {\n            float: left;\n            width: 300px;\n            height: 300px;\n            border: 1px solid #aaa;\n            margin: 10px;\n        }\n    </style>\n</head>\n\n<body>\n    <p>拖拽图片至div</p>\n    <div ondrop="drop(event)" ondragover="allowDrop(event)">\n    </div>\n    <div ondrop="drop(event)" ondragover="allowDrop(event)">\n    </div>\n    <br />\n    <img id="img" \n    src="https://img-blog.csdnimg.cn/20200323112521943.jpg" \n    draggable="true" ondragstart="drag(event)" />\n\n</body>\n<script type="text/javascript">\n    function allowDrop(ev) {\n        ev.preventDefault();\n    }\n\n    function drag(ev) {\n        ev.dataTransfer.setData("img", ev.target.id);\n    }\n\n    function drop(ev) {\n        var data = ev.dataTransfer.getData("img");\n        ev.target.appendChild(document.getElementById(data));\n    }\n<\/script>\n\n</html>\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"本地资源拖放")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>html5拖放</title>\n</head>\n<body>\n    <p>拖拽本地图片至当前页面</p>\n</body>\n<script type="text/javascript">\n\n    document.ondragover = function (ev) {\n        ev.preventDefault();\n    }\n\n    document.ondrop = function (ev) {\n        ev.preventDefault();//默认会以链接打开\n        var file = ev.dataTransfer.files[0];\n        var fileReader = new FileReader();\n        fileReader.onload = function () {\n            var img = new Image();\n            img.src = fileReader.result;\n            document.body.appendChild(img);\n        }\n        fileReader.readAsDataURL(file)\n    }\n<\/script>\n</html>\n')),Object(r.b)("h3",null,"web worker"),Object(r.b)(c.a,{mdxType:"P"},"web worker 是独立运行在后台的js脚本，不影响页面性能，常用于处理耗时的逻辑。 值得注意的是，出于安全性考虑，浏览器对本地运行web worker有限制，需运行在服务器上。"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"使用案例")),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"新建count.js，内部执行一个耗时的逻辑"),Object(r.b)("li",{parentName:"ol"},"count.js 内部使用postMessage发送运行后的结果")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"var arr = Array.from(new Array(10000).keys());\nvar sum = 0;\narr.forEach(item => {\n    sum += item;\n})\n\npostMessage(sum)\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"新建index.html"),Object(r.b)("li",{parentName:"ol"},"创建web worker,加载count.js"),Object(r.b)("li",{parentName:"ol"},"接收count.js发送的数据"),Object(r.b)("li",{parentName:"ol"},"渲染到界面上"),Object(r.b)("li",{parentName:"ol"},"销毁web worker")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>web worker</title>\n</head>\n<body>\n</body>\n<script>\n    window.onload = function () {\n        var worker = new Worker(\'count.js\');\n        worker.onmessage = function (e) {\n            document.body.innerText = e.data;\n            worker.terminate();\n        }\n    }\n<\/script>\n</html>\n\n')),Object(r.b)("h2",null,"defer和async的异同"),Object(r.b)(c.a,{style:{background:"lightblue"},mdxType:"P"},Object(r.b)("p",null,"都是异步加载脚本",Object(r.b)("br",null),"\ndefer加载完延迟执行，可以保证顺序",Object(r.b)("br",null),"\nasync加载完立即执行，无法保证顺序")))}o.isMDXComponent=!0},Pf5Y:function(e,t,n){},Vjog:function(e,t,n){},"e/YJ":function(e,t,n){},k7Sn:function(e,t){t.supportedLanguages={en:"English","zh-hans":"简体中文"}},s85H:function(e,t,n){},shca:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}n.d(t,"a",(function(){return a}))},"vPK/":function(e,t,n){},xpFW:function(e,t,n){}}]);
//# sourceMappingURL=component---src-pages-html-index-mdx-09300aad2b98fa739660.js.map