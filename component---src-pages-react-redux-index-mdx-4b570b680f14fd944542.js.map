{"version":3,"sources":["webpack:///./src/utils/i18n.js","webpack:///./src/components/BlogLayout/Translations.js","webpack:///./src/components/BlogLayout/index.js","webpack:///./i18n.js","webpack:///./src/pages/react-redux/index.mdx","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["codeToLanguage","code","supportedLanguages","replace","Translations","render","this","props","translations","lang","languageLink","editUrl","className","Panel","style","fontFamily","length","map","l","i","Fragment","key","to","href","target","rel","React","Component","BlogLayout","console","log","pageContext","children","location","previous","next","siteTitle","get","langKey","slug","slice","sort","a","b","require","loadFontsForCode","rawSlug","targetLang","createLanguageLink","enSlug","Layout","title","SEO","frontmatter","description","spoiler","date","marginLeft","marginRight","maxWidth","rhythm","color","scale","display","marginBottom","marginTop","formatPostDate","flexWrap","justifyContent","listStyle","padding","fields","query","data","queryData","exports","en","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","Object","keys","indexOf"],"mappings":"wRAYaA,EAAiB,SAAAC,GAAI,OAChCC,qBAAmBD,GAAME,QAAQ,KAAM,MCyCxBC,E,kGAxCbC,OAAA,WAAU,IAAD,EAC6CC,KAAKC,MAAnDC,EADC,EACDA,aAAcC,EADb,EACaA,KAAMC,EADnB,EACmBA,aAAcC,EADjC,EACiCA,QAExC,OACE,yBAAKC,UAAU,gBACb,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,WAVV,2KAWHP,EAAaQ,OAAS,GACrB,oCACE,8DACCR,EAAaS,KAAI,SAACC,EAAGC,GAAJ,OAChB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKH,GAClBA,IAAMT,EACL,2BAAIT,EAAekB,IAEnB,kBAAC,OAAD,CAAMI,GAAIZ,EAAaQ,IAAKlB,EAAekB,IAE5CC,IAAMX,EAAaQ,OAAS,EAAI,GAAK,WAKpC,YAATP,GACC,oCACI,6BACA,6BACA,kBAAC,OAAD,CAAMa,GAAIZ,EAAa,YAAvB,qBACC,MACD,uBAAGa,KAAMZ,EAASa,OAAO,SAASC,IAAI,uBAAtC,4BAGC,MACD,kBAAC,OAAD,CAAMH,GAAE,IAAMb,GAAd,6BAAuD,Q,GAhC9CiB,IAAMC,W,imBCGjC,IAGMC,E,kGACJvB,OAAA,WACEwB,QAAQC,IAAIxB,KAAKC,OADV,MAYHD,KAAKC,MARPwB,EAJK,EAILA,YACAC,EALK,EAKLA,SACAC,EANK,EAMLA,SAGAC,EATK,EASLA,SACAC,EAVK,EAULA,KACA3B,EAXK,EAWLA,aAEI4B,EAAYC,IAAI/B,KAAKC,MAAO,qCAC5BE,EAAOsB,EAAYO,QACnBC,EAAOR,EAAYQ,KAGrB/B,IACFA,EAAeA,EAAagC,SACfC,MAAK,SAACC,EAAGC,GACpB,OAAO3C,EAAe0C,GAAK1C,EAAe2C,IAAM,EAAI,KF1B5B,SAAA1C,GAC9B,OAAQA,GACN,IAAK,KACL,IAAK,KACH2C,EAAQ,QACRA,EAAQ,QACR,MACF,IAAK,KACHA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACR,MACF,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,QACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACHA,EAAQ,QACRA,EAAQ,QACR,MACF,IAAK,KACHA,EAAQ,QACRA,EAAQ,QACR,MACF,IAAK,KACHA,EAAQ,QACR,MACF,IAAK,KACHA,EAAQ,SEZVC,CAAiBpC,GAEjB,IAAMC,EFkBwB,SAAC6B,EAAM9B,GACvC,IAAMqC,EAAUP,EAAKpC,QAAWM,EAAhB,IAAyB,IAEzC,OAAO,SAAAsC,GAAU,MACA,YAAfA,EAA2BD,EAA3B,GAAwCC,EAAaD,GEtBhCE,CAAmBT,EAAM9B,GAExCwC,EAASvC,EAAa,MACtBC,EAAO,mEAAsFsC,EAAOT,MACxG,EACAS,EAAOjC,OAAS,GAFL,UAGM,YAATP,EAAqB,GAAK,IAAMA,GAH7B,MAKb,OACE,kBAACyC,EAAA,EAAD,CAAQjB,SAAUA,EAAUkB,MAAOf,GACjC,kBAACgB,EAAA,EAAD,CACE3C,KAAMA,EACN0C,MAAOpB,EAAYsB,YAAYF,MAC/BG,YAAavB,EAAYsB,YAAYE,QACrChB,KAAMA,EACNiB,KAAMzB,EAAYsB,YAAYG,OAEhC,yBACE1C,MAAO,CACL2C,WAAY,OACZC,YAAa,OACbC,SAAUC,YAAO,MAGnB,iCACE,gCACE,wBAAI9C,MAAO,CAAE+C,MAAO,qBACjB9B,EAAYsB,YAAYF,OAE3B,uBACErC,MAAK,OACAgD,aAAM,KADN,IAEHC,QAAS,QACTC,aAAcJ,YAAO,GACrBK,UAAWL,aAAO,OAGnBM,YAAenC,EAAYsB,YAAYG,KAAM/C,IAG/CD,GAAgBA,EAAaQ,OAAS,GACrC,kBAAC,EAAD,CACER,aAAcA,EACdG,QAASA,EACTD,aAAcA,EACdD,KAAMA,KAIZ,6BAAMuB,IAER,+BACE,6BACE,wBACElB,MAAO,CACLiD,QAAS,OACTI,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGpC,GACC,kBAAC,OAAD,CACEZ,GAAIY,EAASqC,OAAOhC,KACpBd,IAAI,OACJX,MAAO,CAAE4C,YAAa,KAHxB,KAKKxB,EAASmB,YAAYF,QAI9B,4BACGhB,GACC,kBAAC,OAAD,CAAMb,GAAIa,EAAKoC,OAAOhC,KAAMd,IAAI,QAC7BU,EAAKkB,YAAYF,MADpB,a,GAvGKzB,IAAMC,WAqHhB,aAAApB,GACb,OACE,kBAAC,cAAD,CACEiE,MAAK,aAULnE,OAAQ,SAAAoE,GAAI,OAAI,kBAAC,EAAD,eAAYC,UAAWD,GAAUlE,S,iHCpJvDoE,EAAQzE,mBAAqB,CAC3B0E,GAAI,UACJ,UAAW,S,kLCKAC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACG3E,EACF,8BACD,OAAO,YAACwE,EAAD,iBAAeD,EAAiBvE,EAAhC,CAAuC2E,WAAYA,EAAYC,QAAQ,cAG5E,4BACA,4GAEA,+EACA,0DACA,qBAAG,iCAAKC,WAAW,KAAQ,CACvB,IAAO,sFACP,IAAO,UAEX,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,gCAAIA,WAAW,MAAS,CACtB,MAAS,UAIf,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2BAMN,0CACA,gEACA,8BACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mJAYL,4BACA,qBAAG,sBAAQA,WAAW,KAAnB,eACH,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4EAML,qBAAG,sBAAQA,WAAW,KAAnB,gBACH,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qRAiBL,gEAEA,iCACA,wCACA,2CACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yHASL,qEAEA,4DACA,wMAGA,4EACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4MAkBL,gIAEA,qBAAG,sBAAQA,WAAW,KAAnB,UACH,oDACA,oMAIA,qBAAG,sBAAQA,WAAW,KAAnB,4BACH,gOAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kQAyBL,8CACA,oCACA,wEACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2zCAiDL,sBACE,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,6DACA,kBAAIA,WAAW,MAAf,sDACA,kBAAIA,WAAW,MAAf,yEACA,kBAAIA,WAAW,MAAf,0EACA,kBAAIA,WAAW,MAAf,kBAEF,+BACA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,uCADQ,wCAItB,4BACA,gCACA,gCACA,yCACA,qCAKJH,EAAWI,gBAAiB,G,yDC3Qb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIlE,EAAKF,EAFLK,EAAS,GACTiE,EAAaC,OAAOC,KAAKJ,GAG7B,IAAKpE,EAAI,EAAGA,EAAIsE,EAAWzE,OAAQG,IACjCE,EAAMoE,EAAWtE,GACbqE,EAASI,QAAQvE,IAAQ,IAC7BG,EAAOH,GAAOkE,EAAOlE,IAGvB,OAAOG,EAZT,mC","file":"component---src-pages-react-redux-index-mdx-4b570b680f14fd944542.js","sourcesContent":["import { supportedLanguages } from './../../i18n';\r\nimport whitelist from './whitelist';\r\n\r\n// This is kind of a mess for some languages.\r\n// Try to be as short as possible.\r\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\r\n// Some resources:\r\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\r\n// https://www.w3.org/International/articles/language-tags/\r\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\r\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\r\n\r\nexport const codeToLanguage = code =>\r\n  supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\r\n\r\nexport const loadFontsForCode = code => {\r\n  switch (code) {\r\n    case 'ru':\r\n    case 'bg':\r\n      require('../fonts/fonts-shared.cyrillic.css');\r\n      require('../fonts/fonts-post.cyrillic.css');\r\n      break;\r\n    case 'uk':\r\n      require('../fonts/fonts-shared.cyrillic.css');\r\n      require('../fonts/fonts-post.cyrillic.css');\r\n      require('../fonts/fonts-shared.latin-ext.css');\r\n      require('../fonts/fonts-post.latin-ext.css');\r\n      break;\r\n    case 'cs':\r\n    case 'da':\r\n    case 'de':\r\n    case 'es':\r\n    case 'fi':\r\n    case 'fr':\r\n    case 'he':\r\n    case 'hu':\r\n    case 'it':\r\n    case 'nl':\r\n    case 'no':\r\n    case 'pl':\r\n    case 'pt-br':\r\n    case 'sk':\r\n    case 'sr':\r\n    case 'sq':\r\n    case 'sv':\r\n    case 'tr':\r\n      require('../fonts/fonts-shared.latin-ext.css');\r\n      require('../fonts/fonts-post.latin-ext.css');\r\n      break;\r\n    case 'vi':\r\n      require('../fonts/fonts-shared.vietnamese.css');\r\n      require('../fonts/fonts-post.vietnamese.css');\r\n      break;\r\n    case 'fa':\r\n      require('../fonts/fonts-post.persian.css');\r\n      break;\r\n    case 'ar':\r\n      require('../fonts/fonts-post.arabic.css');\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n// TODO: the curried signature is weird.\r\nexport const createLanguageLink = (slug, lang) => {\r\n  const rawSlug = slug.replace(`${lang}/`, '');\r\n\r\n  return targetLang =>\r\n    targetLang === 'zh-hans' ? rawSlug : `${targetLang}${rawSlug}`;\r\n};\r\n\r\nexport const replaceAnchorLinksByLanguage = (html, code) => {\r\n  // Match any link using https://regexr.com/4airl\r\n  const matches = html.match(/https?:\\/\\/(www)?[^\\/\\s)\"?]+/gm); // eslint-disable-line\r\n\r\n  // Return same html if no matches were found\r\n  // or code isn't supported\r\n  if (!matches || !supportedLanguages[code]) {\r\n    return html;\r\n  }\r\n\r\n  matches.forEach(url => {\r\n    // Replace to locale url if and only if exists in whitelist\r\n    // and has code registered\r\n    if (whitelist[url] && whitelist[url][code]) {\r\n      html = html.replace(url, whitelist[url][code]);\r\n    }\r\n  });\r\n\r\n  return html;\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport '../../fonts/fonts-post.css';\r\nimport Panel from '../Panel';\r\nimport {\r\n  codeToLanguage,\r\n} from '../../utils/i18n';\r\n\r\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\r\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\r\n\r\nclass Translations extends React.Component {\r\n    render() {\r\n      let { translations, lang, languageLink, editUrl } = this.props;\r\n  \r\n      return (\r\n        <div className=\"translations\">\r\n          <Panel style={{ fontFamily: systemFont }}>\r\n            {translations.length > 0 && (\r\n              <>\r\n                <span>Translated by readers into: </span>\r\n                {translations.map((l, i) => (\r\n                  <React.Fragment key={l}>\r\n                    {l === lang ? (\r\n                      <b>{codeToLanguage(l)}</b>\r\n                    ) : (\r\n                      <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\r\n                    )}\r\n                    {i === translations.length - 1 ? '' : ' • '}\r\n                  </React.Fragment>\r\n                ))}\r\n              </>\r\n            )}\r\n            {lang !== 'zh-hans' && (\r\n              <>\r\n                  <br />\r\n                  <br />\r\n                  <Link to={languageLink('zh-hans')}>Read the original</Link>\r\n                  {' • '}\r\n                  <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      Improve this translation\r\n                  </a>\r\n                  {' • '}\r\n                  <Link to={`/${lang}`}>View all translated posts</Link>{' '}\r\n              </>\r\n            )}\r\n          </Panel>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Translations;","import React from \"react\"\nimport { Link, graphql, StaticQuery } from \"gatsby\"\nimport get from \"lodash/get\"\n\nimport \"../../fonts/fonts-post.css\"\nimport Layout from \"../Layout\"\nimport SEO from \"../SEO\"\nimport Translations from \"./Translations\"\nimport { formatPostDate } from \"../../utils/helpers\"\nimport { rhythm, scale } from \"../../utils/typography\"\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n} from \"../../utils/i18n\"\n\nconst GITHUB_USERNAME = \"gaearon\"\nconst GITHUB_REPO_NAME = \"overreacted.io\"\n\nclass BlogLayout extends React.Component {\n  render() {\n    console.log(this.props)\n\n    let {\n      pageContext,\n      children,\n      location,\n\n      // TODO: 不存在的\n      previous,\n      next,\n      translations,\n    } = this.props\n    const siteTitle = get(this.props, \"queryData.site.siteMetadata.title\")\n    const lang = pageContext.langKey\n    const slug = pageContext.slug\n    // const timeToRead = 0;\n\n    if (translations) {\n      translations = translations.slice()\n      translations.sort((a, b) => {\n        return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1\n      })\n    }\n\n    loadFontsForCode(lang)\n\n    const languageLink = createLanguageLink(slug, lang)\n    // eg: /en/data-post/\n    const enSlug = languageLink(\"en\")\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n      1,\n      enSlug.length - 1\n    )}/index${lang === \"zh-hans\" ? \"\" : \".\" + lang}.md`\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={pageContext.frontmatter.title}\n          description={pageContext.frontmatter.spoiler}\n          slug={slug}\n          date={pageContext.frontmatter.date}\n        />\n        <div\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: rhythm(24),\n          }}\n        >\n          <article>\n            <header>\n              <h1 style={{ color: \"var(--textTitle)\" }}>\n                {pageContext.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: \"block\",\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(pageContext.frontmatter.date, lang)}\n                {/* {` • ${formatReadingTime(timeToRead)}`} */}\n              </p>\n              {translations && translations.length > 0 && (\n                <Translations\n                  translations={translations}\n                  editUrl={editUrl}\n                  languageLink={languageLink}\n                  lang={lang}\n                />\n              )}\n            </header>\n            <div>{children}</div>\n          </article>\n          <aside>\n            <nav>\n              <ul\n                style={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  listStyle: \"none\",\n                  padding: 0,\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link\n                      to={previous.fields.slug}\n                      rel=\"prev\"\n                      style={{ marginRight: 20 }}\n                    >\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          </aside>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              author\n            }\n          }\n        }\n      `}\n      render={data => <BlogLayout queryData={data} {...props} />}\n    />\n  )\n}\n","// Please keep keys lowercase!\r\nexports.supportedLanguages = {\r\n  en: 'English',\r\n  'zh-hans': '简体中文',\r\n  // ru: 'Русский',\r\n  // tr: 'Türkçe',\r\n  // es: 'Español',\r\n  // ko: '한국어',\r\n  // sv: 'Svenska',\r\n  // it: 'Italiano',\r\n  // id: 'Bahasa Indonesia',\r\n  // 'pt-br': 'Português do Brasil',\r\n  // pl: 'Polski',\r\n  // 'zh-hant': '繁體中文',\r\n  // ja: '日本語',\r\n  // fr: 'Français',\r\n  // he: 'עברית',\r\n  // hu: 'Magyar',\r\n  // vi: 'Tiếng Việt',\r\n  // th: 'ไทย',\r\n  // my: 'မြန်မာဘာသာ',\r\n  // sk: 'Slovenčina',\r\n  // te: 'తెలుగు',\r\n  // uk: 'Українська',\r\n  // bg: 'Български',\r\n  // cs: 'Čeština',\r\n  // de: 'Deutsch',\r\n  // nl: 'Nederlands',\r\n  // nb: 'Norsk',\r\n  // fa: 'فارسی',\r\n  // ar: 'العربية',\r\n  // sr: 'srpski',\r\n};\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/lengy/Desktop/gatsby-blog/src/components/BlogLayout/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`前言`}</h2>\n    <p>{`react-redux作为react和redux的粘合剂,可完成状态的订阅与更新。\n这部分涉及的核心功能点有三个:provider,context,connect。`}</p>\n    <p>{`面试高频:connect,mapStateToProps,mapDispatchToProps的应用和原理。`}</p>\n    <p>{`本篇为源码系列核心实现第四篇,对应下图react-redux部分。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://lengyuexin.github.io/gatsby/static/src-c54cf51e73a8fdc229c79ea7b981b607.png\",\n        \"alt\": \"src\"\n      }}></img></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`desc`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`provider`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`数据提供方`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`context`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`状态上下文对象`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`connect`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`高阶组件,被包装后的组件可连接store`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`Provider与Context`}</h2>\n    <p>{`Provider用于向所有组件传递数据仓库store,配合Context使用。`}</p>\n    <h3>{`基本使用`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//store来源于redux中createStore方法的返回值。\n function App() {\n  return (\n    <Provider store={store}>\n      <Child />\n    </Provider>\n  );\n}\n\n`}</code></pre>\n    <h3>{`实现`}</h3>\n    <p><strong parentName=\"p\">{`context的实现`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const context = React.createContext(null);\nexport default context;\n\n`}</code></pre>\n    <p><strong parentName=\"p\">{`provider的实现`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\n//ReactReduxContext就是上边的context\n class Provider extends Component{\n  render() {\n    return (\n      <ReactReduxContext.Provider\n        value={{store: this.props.store}}\n      >\n        {this.props.children}\n      </ReactReduxContext.Provider>\n    );\n  }\n}\n\n`}</code></pre>\n    <p>{`这就完事了？是的,大道至简。\n关键也不在这里,下面来看重头戏connect。`}</p>\n    <h2>{`connect`}</h2>\n    <h3>{`connect是怎么使用的？`}</h3>\n    <p>{`了解其背后实现前,先看一下大概用法。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { connect } from 'react-redux'\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\n`}</code></pre>\n    <p>{`就这？对,就这一下子就完事了。\nconnect是高阶函数,最后会返回一个包装后的组件。`}</p>\n    <h3>{`mapStateToProps和mapDispatchToProps`}</h3>\n    <p>{`connect方法可接受两个参数:mapStateToProps和mapDispatchToProps。\n其中mapStateToProps用于将从store中获取的state映射到被包裹组件的props上,主要用于数据渲染。\nmapDispatchToProps是将交互逻辑映射成action后传递给被包装后的组件,主要用于事件交互(如点击)。`}</p>\n    <p>{`mapStateToProps是一个函数,最后会返回一个对象,对象属性为store中状态树的同名属性。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//store中数据\nstate:{\n    name:'冷月心'\n}\nconst mapStateToProps = (state) => {\n  return {\n    name:state.name\n  }\n}\n\n//被connect包裹后组件props中可以拿到name属性\nfunction App(props){\n props.name//冷月心\n}\n\n`}</code></pre>\n    <p>{`mapStateToProps会订阅 Store,state更新会触发视图的重新渲染,这在react中表现为setState。\n这部分就涉及到了subscribe和setState,暂且略过,下文会提到。`}</p>\n    <p><strong parentName=\"p\">{`第二个参数`}</strong></p>\n    <p>{`我之前面试,忘了哪个面家面试官问的了,但确实没回答上。`}</p>\n    <p>{`他问我mapStateToProps和mapDispatchToProps的第二个参数是什么？\n说实话我脑瓜子嗡嗡的,当时一脸诧异,这还有第二个参数？\n后来了解到确实有,就是组件自身的props,也可以叫ownProps。\n且ownProps发生改变,mapStateToProps和mapDispatchToProps就会重新被调用。`}</p>\n    <p><strong parentName=\"p\">{`不同类型的mapDispatchToProps`}</strong></p>\n    <p>{`与mapStateToProps不同,mapDispatchToProps可以是一个对象,也可以是一个函数。\nconnect内部,对象类型的mapDispatchToProps会使用bindActionCreators完成ActionCreators与dispatch的绑定。\n函数类型的mapDispatchToProps会接收一个dispatch参数,返回dispatch后的action。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//函数形式\nconst mapDispatchToProps = (\n  dispatch\n) => {\n  return {\n    onClick: () => {\n      dispatch({\n        type: 'ADD',\n      });\n    }\n  };\n}\n\n//对象形式\n\nconst mapDispatchToProps = {\n  onClick: () => ({\n    type: 'ADD',\n  })\n}\n\n\n`}</code></pre>\n    <p>{`具体使用哪种形式还是看个人习惯，喜欢就好。`}</p>\n    <h3>{`connect的实现`}</h3>\n    <p>{` connect一共做了四件事:订阅,状态映射,dispatch映射,返回扩展后的被包裹组件。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\nimport React from \"react\";\nimport bindActionCreators from \"../redux/bindActionCreators\";\nimport ReactReduxContext from \"./Context\";\nexport default function (mapStateToProps, mapDispatchToProps) {\n  return function (OldComponent) {\n    return class newComponent extends React.Component {\n      unsubscribe;\n      static contextType = ReactReduxContext;\n      constructor(props, context) {\n        super(props);\n        this.state = mapStateToProps(context.store.getState());\n      }\n\n      componentDidMount() {\n        this.unsubscribe = this.context.store.subscribe(() => {\n          // mapStateToProps接收一个state参数,返回一个state对象\n          this.setState(mapStateToProps(this.context.store.getState()));\n        });\n      }\n\n      componentWillUnmount() {\n        this.unsubscribe();\n      }\n\n      render() {\n        let actions;\n        if (typeof mapDispatchToProps === \"function\") {\n          actions = mapDispatchToProps(this.context.store.dispatch);\n        } else if (\n          mapDispatchToProps &&\n          typeof mapDispatchToProps === \"object\"\n        ) {\n          actions = bindActionCreators(\n            mapDispatchToProps,\n            this.context.store.dispatch\n          );\n        }\n\n        return <OldComponent {...this.state} {...actions} />;\n      }\n    };\n  };\n}\n\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`connect在挂载阶段订阅更新函数setState,在卸载阶段取消订阅。`}</li>\n      <li parentName=\"ul\">{`connect从context的store中调用getState,返回值作为参数给mapStateToProps。`}</li>\n      <li parentName=\"ul\">{`mapStateToProps函数执行的返回值用于初始化this.state,之后传递给被包裹组件。`}</li>\n      <li parentName=\"ul\">{`对于dispatch映射分为两种情况,如果mapDispatchToProps是一个对象,就需要用bingActionCreators绑定`}</li>\n      <li parentName=\"ul\">{`如果mapDispatchToProps是一个函数,就给这个函数传递dispatch参数并调用,最后返回的actions传递给被包裹的组件。`}</li>\n      <li parentName=\"ul\">{`最终,将映射完的组件返回。`}</li>\n    </ul>\n    <h2>{`源码压缩包`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/lengyuexin/code\"\n        }}>{`https://github.com/lengyuexin/code`}</a></li>\n    </ul>\n    <h2>{`再会`}</h2>\n    <p>{`情如风雪无常,`}</p>\n    <p>{`却是一动既殇。`}</p>\n    <p>{`感谢你这么好看还来阅读我的文章,`}</p>\n    <p>{`我是冷月心,下期再见。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}