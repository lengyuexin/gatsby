{"version":3,"sources":["webpack:///./src/pages/network/DHCP-and-DNS/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"4RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,8BACA,YAAC,IAAD,CAAGA,QAAQ,KAAX,qFAIA,6BACA,YAAC,IAAD,CAAGA,QAAQ,KAAX,oCAC6B,uBAD7B,mDAE4C,uBAF5C,gCAGyB,uBAHzB,gBAUJH,EAAWI,gBAAiB","file":"component---src-pages-network-dhcp-and-dns-index-mdx-fdcff8b2a72aa8ddf945.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bytedance/Desktop/gatsby/src/components/BlogLayout/index.js\";\nimport P from '../../../components/Panel.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3>{`DHCP`}</h3>\n    <P mdxType=\"P\"> \n动态主机配置协议。有了这个协议，网络管理员只需要配置一段共享的IP地址。\n每一台新接入的机器都通过DHCP协议来这个共享的IP地址里申请,然后自动配置,用完回收。\n    </P>\n    <h3>{`DNS`}</h3>\n    <P mdxType=\"P\"> \n域名系统。可将域名和IP地址相互映射的一个分布式数据库,方便记忆。<br />\n前端请求时的DNS缓存查找顺序:浏览器缓存=>操作系统缓存=>windows host文件缓存。<br />\n回源:类似cdn,缓存未命中的情况下继续向源头服务器查找。<br />\n回源请求由浏览器发出。\n    </P>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}