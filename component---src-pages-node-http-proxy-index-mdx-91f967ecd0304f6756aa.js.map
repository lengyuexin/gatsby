{"version":3,"sources":["webpack:///./src/pages/node/http-proxy/index.mdx","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","style","background","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"wPASaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,8BACA,YAAC,IAAD,CAAGA,QAAQ,KAAX,sCAGA,qBAAG,sBAAQC,WAAW,KAAnB,QACH,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXH,QAAQ,KACT,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,oSAcP,qBAAG,sBAAQA,WAAW,KAAnB,QACH,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXH,QAAQ,KACT,mDAAkC,uBAAlC,qCAC4B,uBAD5B,yBAEgB,uBAFhB,4BAGmB,uBAHnB,8BAIqB,uBAJrB,SAOF,qCACA,YAAC,IAAD,CAAGA,QAAQ,KAAX,2BACoB,uBADpB,gCAEyB,uBAFzB,mDAG4C,uBAH5C,mDAI4C,wBAE5C,qBAAG,sBAAQC,WAAW,KAAnB,aACH,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kiBAqBL,qBAAG,sBAAQA,WAAW,KAAnB,SACH,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6GAOL,qBAAG,sBAAQA,WAAW,KAAnB,SACH,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gHAYTJ,EAAWO,gBAAiB,G,kCCzGb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-pages-node-http-proxy-index-mdx-91f967ecd0304f6756aa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/lengy/Desktop/gatsby-blog/src/components/BlogLayout/index.js\";\nimport P from '../../../components/Panel.js';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3>{`代理转发`}</h3>\n    <P mdxType=\"P\"> \n访问3000端口，会被转发到5000端口，页面显示port 5000\n    </P>\n    <p><strong parentName=\"p\">{`服务a`}</strong></p>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`const app = require('http')\nconst httpProxy = require('http-proxy')\nconst proxy=httpProxy.createProxyServer()\napp.createServer((req, res) => {\n    proxy.web(req,res,{\n        target:'http://localhost:5000'\n    })\n}).listen(3000, () => {\n    console.log('run server 3000 ')\n})\n`}</code></pre>\n    </P>\n    <p><strong parentName=\"p\">{`服务b`}</strong></p>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <p>{`const app = require('http')`}<br />{`\napp.createServer((req, res) => {`}<br />{`\nres.end('port 5000')`}<br />{`\n}).listen(5000, () => {`}<br />{`\nconsole.log('run server')`}<br />{`\n})`}</p>\n    </P>\n    <h3>{`模拟nginx反向代理`}</h3>\n    <P mdxType=\"P\"> \n监听同一个端口，根据上下文，分发到不同的服务上。<br />\n代理机和两台服务分别跑在8080，3000，3001端口。<br />\n访问:http://localhost:8080/server/1 页面显示==>server1<br />\n访问:http://localhost:8080/server/2 页面显示==>server2<br />\n    </P>\n    <p><strong parentName=\"p\">{`代理机proxy`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const app = require('http')\nconst httpProxy = require('http-proxy')\nconst url = require('url')\nconst proxy = httpProxy.createProxyServer()\n//代理路径映射 相当于nginx的 proxy_pass\nconst map = {\n    '/server/1': 'http://localhost:3000',\n    '/server/2': 'http://localhost:3001',\n}\napp.createServer((req, res) => {\n    const {pathname} =url.parse(req.url)\n    if (pathname === '/favicon.ico') return res.end()\n    proxy.web(req, res, {\n        target: map[pathname]\n    })\n}).listen(8080, () => {\n    console.log('run server 8080 ')\n})\n`}</code></pre>\n    <p><strong parentName=\"p\">{`服务机1`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const app = require('http')\napp.createServer((req, res) => {\n    res.end('server1')\n}).listen(3000)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`服务机2`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\nconst app = require('http')\napp.createServer((req, res) => {\n    res.end('server2')\n}).listen(3001)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}