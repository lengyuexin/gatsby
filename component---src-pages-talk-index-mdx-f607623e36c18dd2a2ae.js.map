{"version":3,"sources":["webpack:///./src/pages/talk/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,4BACA,yDAAwC,sBAAQC,WAAW,KAAnB,QAAxC,MAAuF,sBAAQA,WAAW,KAAnB,QAAvF,8EACA,+BACA,uIACA,4CAA2B,sBAAQA,WAAW,KAAnB,aAA3B,iBACA,4CACA,qDACA,+CACA,4CACA,kCACA,sBACE,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,QAEF,+CACA,4EACA,2CACA,+BACA,kEACA,qBAAG,sBAAQA,WAAW,KAAnB,mCAAH,yCACA,iEACA,qDACA,mCACA,8CAA6B,sBAAQA,WAAW,KAAnB,MAA7B,SACA,4FACA,+BAAc,sBAAQA,WAAW,KAAnB,MAAd,kBACA,uEACA,4CACA,4CACA,uDACA,mCACA,qBAAG,sBAAQA,WAAW,KAAnB,kCACH,6DACA,uDAAsC,sBAAQA,WAAW,KAAnB,uBAAtC,6DACA,sDACA,gGACA,uEACA,6BAAY,sBAAQA,WAAW,KAAnB,uBACZ,mCACA,+HACA,+BACA,mGAEA,oEACA,yCACA,8BACA,uJACA,8BACA,8FACA,8BACA,iDACA,oEACA,qCAAoB,sBAAQA,WAAW,KAAnB,SAApB,KACA,4CACA,4CACA,qCACA,0CACA,4EACA,4EACA,4BACA,uCACA,gCACA,gCACA,yCACA,qCAKJJ,EAAWK,gBAAiB","file":"component---src-pages-talk-index-mdx-f607623e36c18dd2a2ae.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bytedance/Desktop/gatsby/src/components/BlogLayout/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`前言`}</h2>\n    <p>{`在字节，大部分研发同学在试用期结束前都会有一场收官之战，这被称之为`}<strong parentName=\"p\">{`新人串讲`}</strong>{`或者说`}<strong parentName=\"p\">{`技术串讲`}</strong>{`。不同于寻常的技术分享，技术串讲显得更加正式，关注度也相对高一些。结合自己的实际经历，今天我们就来聊一下如何准备一次技术串讲，希望本文对你有所帮助。`}</p>\n    <h2>{`如何选题？`}</h2>\n    <p>{`首先，串讲存在的意义是双向性的。对于公司而言，在意的是新人入职一段时间内的成长如何。这个成长，体现在业务，技术，表达等多个方面。对于个人而言，搬砖这么久，总要拿出一些东西证明下自己的实际产出和技术能力，完成一场收官之战。`}</p>\n    <p>{`这样的性质，就注定了一场完整的串讲应该是`}<strong parentName=\"p\">{`技术与业务一半一半`}</strong>{`，而非全部业务或全部技术。`}</p>\n    <p>{`在这样的背景下，选题上就会有一些局限。`}</p>\n    <p>{`不同部门存在业务方向差异，具体到每个人身上也会有所不同。`}</p>\n    <p>{`或四处搬砖，没有主线；或从零到一，独立负责。`}</p>\n    <p>{`不管是哪一种，都要认真做一次深度思考。`}</p>\n    <p>{`要思考的点有很多：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`这个功能为什么需要有？`}</li>\n      <li parentName=\"ul\">{`可以解决什么问题？`}</li>\n      <li parentName=\"ul\">{`设计思路是怎样的？`}</li>\n      <li parentName=\"ul\">{`技术上如何实现？`}</li>\n      <li parentName=\"ul\">{`最终是如何发挥作用的？`}</li>\n      <li parentName=\"ul\">{`...`}</li>\n    </ul>\n    <p>{`结合你参与的业务，按照上述几个思考方向展开。`}</p>\n    <p>{`如果你是独立负责某个项目，或者觉得参与的多个项目中某一个展开就有很多细节可说，那选择一个业务去讲就好。`}</p>\n    <p>{`反之，单个业务比较简单，就多选几个。`}</p>\n    <h2>{`如何行文？`}</h2>\n    <p>{`串讲是需要准备材料的，无论是ppt还是md文档(或者其他形式)，都要注意行文结构。`}</p>\n    <p><strong parentName=\"p\">{`一个乱糟糟的结构，不但会影响别人的理解，也会干扰自己的讲述思路`}</strong>{`。对于一些要求严格的部门，讲不好就再来，被打回的串讲多多少少是有些尴尬的。`}</p>\n    <p>{`建议编写材料前，心中要先有一个大纲，不必急于下笔。想清楚了，再上，争取一步到位。`}</p>\n    <p>{`如果你还没想好一个合适的结构，不妨参考一下我给出的结构。`}</p>\n    <h3>{`内容概述，高度凝练`}</h3>\n    <p>{`首先，概述你要串讲的东西是什么，这里可以配合`}<strong parentName=\"p\">{`脑图`}</strong>{`辅助说明。`}</p>\n    <p>{`如果缺少这一步，上来就讲，大概率别人不清楚你讲的是什么。听众迷迷糊糊，就会渐渐失了听下去的兴致。收官之战无人观看，岂不是有些过于清冷？`}</p>\n    <p>{`值得注意的是，`}<strong parentName=\"p\">{`概述`}</strong>{`，脑图不必展示太多细枝末节。`}</p>\n    <p>{`概述的目的就是开门见山，直截了当地告诉别人你要讲的内容是什么，详尽内容放在文章主体讲述就好。`}</p>\n    <p>{`举一个经典的概述例子:邹忌讽齐王纳谏。`}</p>\n    <p>{`高度凝练的一句话，就能很好地概述全篇。`}</p>\n    <p>{`当然，做串讲未必能凝练到这个地步，我只是给一个形式上的参考。`}</p>\n    <h3>{`确定形式，脉络清晰`}</h3>\n    <p><strong parentName=\"p\">{`概述是告诉别人你要讲什么，确定形式是告诉别人你打算怎么讲。`}</strong></p>\n    <p>{`技术服务于业务，业务推动技术提升。一般来说，串讲都是先讲业务，再讲技术。`}</p>\n    <p>{`尤其是讲述多个业务的时候，要尽量保持结构是一致的。比如都是按照`}<strong parentName=\"p\">{`为什么做，预期目标，设计思路，最终效果`}</strong>{`这个流程来。这样做的好处是别人可以知道你的讲述思路，听起来会有循序渐进地那种层次感，而不是东一块西一块地跳来跳去。`}</p>\n    <p>{`上述是对于业务部分的串讲，相比之下，技术的串讲会更加灵活。`}</p>\n    <p>{`如果你想讲某个库的源码，材料可以写的全一些，只讲核心就行。至于剩下的，材料发出，感兴趣的同学自行去看。源码这东西，终归是太干了，一般听不下去。`}</p>\n    <p>{`除了源码，你还可以分享一下性能优化，或者某个场景的解决方案，比如爬虫，水印，截图，鉴权...`}</p>\n    <p>{`重点在于，`}<strong parentName=\"p\">{`技术尽量不要完全和你做的业务割裂开。`}</strong></p>\n    <h3>{`详略得当，主次分明`}</h3>\n    <p>{`一般来说，串讲时间控制在40分钟到一小时之间是比较合理的。这就意味着，即便你有很多想讲的内容，也要有明显的详略控制，优先把重要的提到前面写。讲不讲是一回事，写不写是另一回事，材料还是要尽可能地准备全一些。`}</p>\n    <h2>{`如何讲述？`}</h2>\n    <p>{`整理完材料后，接下来就是讲述环节。这并不意味着按照写的内容从上到下读一遍就完事了，需要注意的点也挺多呢。\n比如流畅度，层次感，时间把控，收尾...`}</p>\n    <p>{`为了尽可能保证你在讲述的过程中不出现断片，语无伦次等奇奇怪怪的情况，试讲是十分重要的。`}</p>\n    <p>{`而试讲又分为自我试讲和他人试讲。`}</p>\n    <h3>{`自我试讲`}</h3>\n    <p>{`当你材料准备完，讲之前需要先自我试讲一下。这样做的目的是尽可能确保你的大脑和你的语言表达能对齐。此外，建议自我试讲时候也来个计时，看看讲完时间是否落在40分钟到一小时这个区间内。如果是，请保持。如果过短或者过长，要分析具体问题出现在哪个环节，下次注意。`}</p>\n    <h3>{`他人试讲`}</h3>\n    <p>{`正所谓当局者迷，自我试讲有些问题自己是察觉不到的。建议找mentor或者组内其他同事试讲一下，然后收集他们的反馈结果。有则改之，无则加勉。`}</p>\n    <h3>{`平稳收尾`}</h3>\n    <p>{`试讲过后就是正式串讲，到最后必然涉及到收尾问题。`}</p>\n    <p>{`不要太突然，戛然而止给人感觉有些突兀，也会有思维上的一个横跳。这样一来，体验会打折扣。`}</p>\n    <p>{`一个比较合适的承接表达是，`}<strong parentName=\"p\">{`总结式收尾`}</strong>{`。`}</p>\n    <p>{`讲完所有主体内容后，对串讲做一个总结。`}</p>\n    <p>{`先讲了什么，后讲了什么，最后讲了什么。`}</p>\n    <p>{`然后再说，我的串讲结束。`}</p>\n    <p>{`(此时可以问大家有没有什么想问的)`}</p>\n    <p>{`这是一个双向考虑。在你开始总结的时候，听众就知道你要讲完了，他们此时可能会做好提问或者退出会议的准备。`}</p>\n    <p>{`对你而言，前边精神高度集中,可以在这个环节小小放松下。放松的心境更有利于回答其他同学接下来可能的提问。`}</p>\n    <h2>{`再会`}</h2>\n    <p>{`关于技术串讲，就先聊到这里。`}</p>\n    <p>{`情如风雪无常,`}</p>\n    <p>{`却是一动即殇。`}</p>\n    <p>{`感谢你这么好看还来阅读我的文章,`}</p>\n    <p>{`我是冷月心,下期再见。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}