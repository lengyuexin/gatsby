{"version":3,"sources":["webpack:///./src/pages/network/tcp-connect/index.mdx","webpack:///./src/utils/i18n.js","webpack:///./src/components/BlogLayout/Translations.js","webpack:///./src/components/BlogLayout/index.js","webpack:///./i18n.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","background","parentName","isMDXComponent","codeToLanguage","code","supportedLanguages","replace","Translations","render","this","translations","lang","languageLink","editUrl","className","Panel","fontFamily","length","map","l","i","Fragment","key","to","href","target","rel","React","Component","BlogLayout","console","log","pageContext","children","location","previous","next","siteTitle","get","langKey","slug","slice","sort","a","b","require","loadFontsForCode","rawSlug","targetLang","createLanguageLink","enSlug","Layout","title","SEO","frontmatter","description","spoiler","date","marginLeft","marginRight","maxWidth","rhythm","color","scale","display","marginBottom","marginTop","formatPostDate","flexWrap","justifyContent","listStyle","padding","fields","query","data","queryData","exports","en","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-network-tcp-connect-index-mdx-0204ebc96480a00f4162.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/lengy/Desktop/gatsby-blog/src/components/BlogLayout/index.js\";\nimport P from '../../../components/Panel.js';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3>{`三次握手的目的`}</h3>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n 确认双方能正确的建立连接,保证全双工通信,其稳定性主要依赖tcp超时重传。\n    </P>\n    <h3>{`三次握手的过程`}</h3>\n    <P style={{\n      background: '#6dd5ed'\n    }} mdxType=\"P\">\n客户端->服务端 SYN=1,seq=x 请求与服务端建立连接,等待...<br />\n服务端->客户端 SYN=1,seq=y,ack=x+1 客户端已经知道服务端能够接到自己请求,同意建立连接,等待...<br />\n客户端->服务端 SYN=1,seq=x+1,ack=y+1 服务端知道自己发送的消息客户端能够接收到,建立通信<br />\n    </P>\n    <h3>{`为什么两次握手不行?`}</h3>\n    <P style={{\n      background: '#6dd5ed'\n    }} mdxType=\"P\">\n根本原因是服务端无法确定客户端能否接收到自己的消息。<br />\n假定网络存在延迟,客户端发送的数据包在已经关闭了连接后到达服务端,按理说服务端应该忽略。<br />\n如果只有两次握手,服务端就会认为是一次新的连接,会重新建立连接。<br />\n而实际上,客户端并没有发出建立连接的请求,因此不会理睬服务器的确认,也不会向服务器发送数据。<br />\n这就会造成空闲等待,白白浪费服务端资源。\n    </P>\n    <h3>{`四次挥手的过程`}</h3>\n    <P style={{\n      background: '#4AC29A'\n    }} mdxType=\"P\">\n客户端的应用进程先向其TCP发出连接释放报文段,并停止在发送数据,主动关闭TCP连接。<br />\n服务器收到连接释放报文段后即发出确认,并询问上层应用是否还有新的数据发送。<br />\n此时进入半连接状态,客户端不会再发送数据,但是服务端可以再传输。<br />\n若服务器已经没有要向客户端发送的数据,其应用进程就通知TCP释放连接。<br />\n客户端在收到服务器的连接释放报文段后,必须对此发出确认。<br />\n去向ACK消息最大存活时间（MSL) + 来向FIN消息的最大存活时间(MSL)。<br />\n其中MSL叫做最长报文段寿命。\n    </P>\n    <h3>{`为什么是2MSL`}</h3>\n    <p><strong parentName=\"p\">{`1. 为了保证客户端和服务端都能顺利进入关闭状态`}</strong></p>\n    <P style={{\n      background: '#4AC29A'\n    }} mdxType=\"P\">\n客户端发送的最后一个ACK报文段有可能无法顺利能够到达服务器。<br />\n服务器 会超时重传这个 FIN + ACK 报文段,而客户端就能在2MSL时间内收到这个重传的报文段。<br />\n接着客户端重传一次确认,重新启动 2MSL 计时器。<br />\n最后,客户端和服务器都能正常进入到CLOSED状态。<br />\n如果客户端在发送ACK 报文段后立即释放连接,那么就无法收到服务器重传的FIN+ACK报文段。<br />\n也就不会再发送一次确认报文段。这样,服务器就无法按照正常步骤进入CLOSED状态。\n    </P>\n    <p><strong parentName=\"p\">{`2. 避免脏数据`}</strong></p>\n    <P style={{\n      background: '#4AC29A'\n    }} mdxType=\"P\">\n客户端在发送完最后一个ACK报文段后,再经过2MSL,就可以使本次连接持续的时间内所产生的所有报文段都从网络中消失,\n这样就可以防止已失效的连接请求报文段出现在本次连接中。\n    </P>\n    <h3>{`如果已经建立了连接,但是客户端突然出现故障了怎么办?`}</h3>\n    <P mdxType=\"P\">\nTCP 设有一个保活计时器。服务器每收到一次客户的数据,就重新设置保活计时器,时间的设置通常是两小时。<br />\n若两小时没有收到客户的数据,服务器就发送一个探测报文段,以后则每隔75s发送一次。<br />\n若一连发送10个探测报文段后仍无客户的响应,服务器就认为客户端出了故障,接着就关闭这个连接。\n    </P>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { supportedLanguages } from './../../i18n';\r\nimport whitelist from './whitelist';\r\n\r\n// This is kind of a mess for some languages.\r\n// Try to be as short as possible.\r\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\r\n// Some resources:\r\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\r\n// https://www.w3.org/International/articles/language-tags/\r\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\r\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\r\n\r\nexport const codeToLanguage = code =>\r\n  supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\r\n\r\nexport const loadFontsForCode = code => {\r\n  switch (code) {\r\n    case 'ru':\r\n    case 'bg':\r\n      require('../fonts/fonts-shared.cyrillic.css');\r\n      require('../fonts/fonts-post.cyrillic.css');\r\n      break;\r\n    case 'uk':\r\n      require('../fonts/fonts-shared.cyrillic.css');\r\n      require('../fonts/fonts-post.cyrillic.css');\r\n      require('../fonts/fonts-shared.latin-ext.css');\r\n      require('../fonts/fonts-post.latin-ext.css');\r\n      break;\r\n    case 'cs':\r\n    case 'da':\r\n    case 'de':\r\n    case 'es':\r\n    case 'fi':\r\n    case 'fr':\r\n    case 'he':\r\n    case 'hu':\r\n    case 'it':\r\n    case 'nl':\r\n    case 'no':\r\n    case 'pl':\r\n    case 'pt-br':\r\n    case 'sk':\r\n    case 'sr':\r\n    case 'sq':\r\n    case 'sv':\r\n    case 'tr':\r\n      require('../fonts/fonts-shared.latin-ext.css');\r\n      require('../fonts/fonts-post.latin-ext.css');\r\n      break;\r\n    case 'vi':\r\n      require('../fonts/fonts-shared.vietnamese.css');\r\n      require('../fonts/fonts-post.vietnamese.css');\r\n      break;\r\n    case 'fa':\r\n      require('../fonts/fonts-post.persian.css');\r\n      break;\r\n    case 'ar':\r\n      require('../fonts/fonts-post.arabic.css');\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n// TODO: the curried signature is weird.\r\nexport const createLanguageLink = (slug, lang) => {\r\n  const rawSlug = slug.replace(`${lang}/`, '');\r\n\r\n  return targetLang =>\r\n    targetLang === 'zh-hans' ? rawSlug : `${targetLang}${rawSlug}`;\r\n};\r\n\r\nexport const replaceAnchorLinksByLanguage = (html, code) => {\r\n  // Match any link using https://regexr.com/4airl\r\n  const matches = html.match(/https?:\\/\\/(www)?[^\\/\\s)\"?]+/gm); // eslint-disable-line\r\n\r\n  // Return same html if no matches were found\r\n  // or code isn't supported\r\n  if (!matches || !supportedLanguages[code]) {\r\n    return html;\r\n  }\r\n\r\n  matches.forEach(url => {\r\n    // Replace to locale url if and only if exists in whitelist\r\n    // and has code registered\r\n    if (whitelist[url] && whitelist[url][code]) {\r\n      html = html.replace(url, whitelist[url][code]);\r\n    }\r\n  });\r\n\r\n  return html;\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport '../../fonts/fonts-post.css';\r\nimport Panel from '../Panel';\r\nimport {\r\n  codeToLanguage,\r\n} from '../../utils/i18n';\r\n\r\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\r\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\r\n\r\nclass Translations extends React.Component {\r\n    render() {\r\n      let { translations, lang, languageLink, editUrl } = this.props;\r\n  \r\n      return (\r\n        <div className=\"translations\">\r\n          <Panel style={{ fontFamily: systemFont }}>\r\n            {translations.length > 0 && (\r\n              <>\r\n                <span>Translated by readers into: </span>\r\n                {translations.map((l, i) => (\r\n                  <React.Fragment key={l}>\r\n                    {l === lang ? (\r\n                      <b>{codeToLanguage(l)}</b>\r\n                    ) : (\r\n                      <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\r\n                    )}\r\n                    {i === translations.length - 1 ? '' : ' • '}\r\n                  </React.Fragment>\r\n                ))}\r\n              </>\r\n            )}\r\n            {lang !== 'zh-hans' && (\r\n              <>\r\n                  <br />\r\n                  <br />\r\n                  <Link to={languageLink('zh-hans')}>Read the original</Link>\r\n                  {' • '}\r\n                  <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      Improve this translation\r\n                  </a>\r\n                  {' • '}\r\n                  <Link to={`/${lang}`}>View all translated posts</Link>{' '}\r\n              </>\r\n            )}\r\n          </Panel>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Translations;","import React from \"react\"\nimport { Link, graphql, StaticQuery } from \"gatsby\"\nimport get from \"lodash/get\"\n\nimport \"../../fonts/fonts-post.css\"\nimport Layout from \"../Layout\"\nimport SEO from \"../SEO\"\nimport Translations from \"./Translations\"\nimport { formatPostDate } from \"../../utils/helpers\"\nimport { rhythm, scale } from \"../../utils/typography\"\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n} from \"../../utils/i18n\"\n\nconst GITHUB_USERNAME = \"gaearon\"\nconst GITHUB_REPO_NAME = \"overreacted.io\"\n\nclass BlogLayout extends React.Component {\n  render() {\n    console.log(this.props)\n\n    let {\n      pageContext,\n      children,\n      location,\n\n      // TODO: 不存在的\n      previous,\n      next,\n      translations,\n    } = this.props\n    const siteTitle = get(this.props, \"queryData.site.siteMetadata.title\")\n    const lang = pageContext.langKey\n    const slug = pageContext.slug\n    // const timeToRead = 0;\n\n    if (translations) {\n      translations = translations.slice()\n      translations.sort((a, b) => {\n        return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1\n      })\n    }\n\n    loadFontsForCode(lang)\n\n    const languageLink = createLanguageLink(slug, lang)\n    // eg: /en/data-post/\n    const enSlug = languageLink(\"en\")\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n      1,\n      enSlug.length - 1\n    )}/index${lang === \"zh-hans\" ? \"\" : \".\" + lang}.md`\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={pageContext.frontmatter.title}\n          description={pageContext.frontmatter.spoiler}\n          slug={slug}\n          date={pageContext.frontmatter.date}\n        />\n        <div\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: rhythm(24),\n          }}\n        >\n          <article>\n            <header>\n              <h1 style={{ color: \"var(--textTitle)\" }}>\n                {pageContext.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: \"block\",\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(pageContext.frontmatter.date, lang)}\n                {/* {` • ${formatReadingTime(timeToRead)}`} */}\n              </p>\n              {translations && translations.length > 0 && (\n                <Translations\n                  translations={translations}\n                  editUrl={editUrl}\n                  languageLink={languageLink}\n                  lang={lang}\n                />\n              )}\n            </header>\n            <div>{children}</div>\n          </article>\n          <aside>\n            <nav>\n              <ul\n                style={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  listStyle: \"none\",\n                  padding: 0,\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link\n                      to={previous.fields.slug}\n                      rel=\"prev\"\n                      style={{ marginRight: 20 }}\n                    >\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          </aside>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              author\n            }\n          }\n        }\n      `}\n      render={data => <BlogLayout queryData={data} {...props} />}\n    />\n  )\n}\n","// Please keep keys lowercase!\r\nexports.supportedLanguages = {\r\n  en: 'English',\r\n  'zh-hans': '简体中文',\r\n  // ru: 'Русский',\r\n  // tr: 'Türkçe',\r\n  // es: 'Español',\r\n  // ko: '한국어',\r\n  // sv: 'Svenska',\r\n  // it: 'Italiano',\r\n  // id: 'Bahasa Indonesia',\r\n  // 'pt-br': 'Português do Brasil',\r\n  // pl: 'Polski',\r\n  // 'zh-hant': '繁體中文',\r\n  // ja: '日本語',\r\n  // fr: 'Français',\r\n  // he: 'עברית',\r\n  // hu: 'Magyar',\r\n  // vi: 'Tiếng Việt',\r\n  // th: 'ไทย',\r\n  // my: 'မြန်မာဘာသာ',\r\n  // sk: 'Slovenčina',\r\n  // te: 'తెలుగు',\r\n  // uk: 'Українська',\r\n  // bg: 'Български',\r\n  // cs: 'Čeština',\r\n  // de: 'Deutsch',\r\n  // nl: 'Nederlands',\r\n  // nb: 'Norsk',\r\n  // fa: 'فارسی',\r\n  // ar: 'العربية',\r\n  // sr: 'srpski',\r\n};\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}