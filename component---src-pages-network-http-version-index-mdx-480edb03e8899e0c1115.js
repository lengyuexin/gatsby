(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{UNLx:function(t,b,e){"use strict";e.r(b),e.d(b,"_frontmatter",(function(){return u})),e.d(b,"default",(function(){return O}));e("rGqo"),e("yt8O"),e("Btvt"),e("RW0V"),e("91GP"),e("q1tI");var n=e("7ljp"),l=e("Hv6d"),c=e("JLKy");var u={},r={_frontmatter:u},p=l.a;function O(t){var b=t.components,e=function(t,b){if(null==t)return{};var e,n,l={},c=Object.keys(t);for(n=0;n<c.length;n++)e=c[n],b.indexOf(e)>=0||(l[e]=t[e]);return l}(t,["components"]);return Object(n.b)(p,Object.assign({},r,e,{components:b,mdxType:"MDXLayout"}),Object(n.b)("h3",null,"http 0.9"),Object(n.b)(c.a,{style:{background:"lightblue"},mdxType:"P"},"http0.9的版本诞生在20世纪90年代初期，此时互联网也就刚处于新兴阶段，网络资源多是纯文本。 麻雀虽小五脏俱全，此时的http已经支持客户端和服务端的通信,http0.9的出现具有划时代的意义。"),Object(n.b)(c.a,{style:{background:"#FDB99B"},mdxType:"P"},Object(n.b)("p",null,"美中不足的是:",Object(n.b)("br",null),"\n该版本的http协议仅支持纯文本传输",Object(n.b)("br",null),"\n请求方式仅支持get",Object(n.b)("br",null),"\n不支持tcp长连接，每次服务端返回响应数据后都会断开连接。")),Object(n.b)("h3",null,"http 1.0"),Object(n.b)(c.a,{style:{background:"lightblue"},mdxType:"P"},"http1.0 是对http0.9的一个增强，但依然不支持tcp长连接。 它形式上和我们现在常用的http相差无几，但还算不上一个实际上的标准。 相比http0.9，http1.0 增强体现在如下方面:"),Object(n.b)(c.a,{style:{background:"#FDB99B"},mdxType:"P"},Object(n.b)("p",null,"传输的数据除文本外，还可传输图像，音视频，是真正意义上的超文本传输",Object(n.b)("br",null),"\n引入http header",Object(n.b)("br",null),"\n增加 HEAD、POST请求",Object(n.b)("br",null),"\n增加响应状态码",Object(n.b)("br",null),"\n增加authorization权限头，cache缓存",Object(n.b)("br",null),"\n网络文件的类型和编码规定Content-Type",Object(n.b)("br",null),"\n压缩类型Content-Encoding",Object(n.b)("br",null),"\n引入协议版本号",Object(n.b)("br",null))),Object(n.b)("h3",null,"http 1.1"),Object(n.b)(c.a,{style:{background:"lightblue"},mdxType:"P"},"http1.1是对http1.0的进一步完善，但它被视为一个真正意义上的标准，广泛使用至今。 相比http1.0，http1.1 增强体现在如下方面："),Object(n.b)(c.a,{style:{background:"#FDB99B"},mdxType:"P"},"支持tcp长连接，同一个连接可以被多个请求复用，无需声明Connection: keep-alive",Object(n.b)("br",null),"支持管线化，无需等上一次响应结束，多个请求可连续发送",Object(n.b)("br",null),"增加缓存管理和控制",Object(n.b)("br",null),"分块传输，断点续传的关键(Transfer-Encoding: chunked)",Object(n.b)("br",null),"新增 PUT、PATCH、OPTIONS、DELETE方法",Object(n.b)("br",null),"请求头新增Host字段，用来指定服务器的域名"),Object(n.b)("h3",null,"http/2"),Object(n.b)(c.a,{style:{background:"lightblue"},mdxType:"P"},"http1.1虽然被广泛使用，但并不是完美的。 管线化默认关闭，且某个请求的响应如果过慢会阻塞其他请求的响应。 从http/2开始，http后续不再有子版本，都是大版本的变更，如http/3。http/2还未普及，即便有些网站已经支持。 相比http1.1，http/2 增强体现在如下方面:"),Object(n.b)(c.a,{style:{background:"#FDB99B"},mdxType:"P"},"HTTP/2是彻底的二进制传输协议，效率更高",Object(n.b)("br",null),"废弃http1.1的管线化方案",Object(n.b)("br",null),"多路复用，允许并发请求，突破浏览器并发请求限制",Object(n.b)("br",null),"可在不断开tcp连接情况下取消某次请求",Object(n.b)("br",null),"使用专用算法压缩头部，减少数据传输量",Object(n.b)("br",null),"服务器推送，允许服务器未经请求，主动向客户端发送资源"),Object(n.b)("h3",null,"重要变更"),Object(n.b)(c.a,{style:{background:"#FDB99B"},mdxType:"P"},"http0.9 诞生，纯文本传输",Object(n.b)("br",null),"http1.0 超文本传输，有HTTP header",Object(n.b)("br",null),"http1.1 tcp长连接，管线化",Object(n.b)("br",null),"http2 废弃管线化，二进制传输，多路复用"))}O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-network-http-version-index-mdx-480edb03e8899e0c1115.js.map