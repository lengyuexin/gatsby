(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{nI9I:function(e,r,n){"use strict";n.r(r),n.d(r,"_frontmatter",(function(){return b})),n.d(r,"default",(function(){return l}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var t=n("7ljp"),p=n("Hv6d"),a=n("JLKy");var b={},c={_frontmatter:b},s=p.a;function l(e){var r=e.components,n=function(e,r){if(null==e)return{};var n,t,p={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(p[n]=e[n]);return p}(e,["components"]);return Object(t.b)(s,Object.assign({},c,n,{components:r,mdxType:"MDXLayout"}),Object(t.b)("h3",null,"代理转发"),Object(t.b)(a.a,{mdxType:"P"},"访问3000端口，会被转发到5000端口，页面显示port 5000"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"服务a")),Object(t.b)(a.a,{style:{background:"#FDB99B"},mdxType:"P"},Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const app = require('http')\nconst httpProxy = require('http-proxy')\nconst proxy=httpProxy.createProxyServer()\napp.createServer((req, res) => {\n    proxy.web(req,res,{\n        target:'http://localhost:5000'\n    })\n}).listen(3000, () => {\n    console.log('run server 3000 ')\n})\n"))),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"服务b")),Object(t.b)(a.a,{style:{background:"#FDB99B"},mdxType:"P"},Object(t.b)("p",null,"const app = require('http')",Object(t.b)("br",null),"\napp.createServer((req, res) => {",Object(t.b)("br",null),"\nres.end('port 5000')",Object(t.b)("br",null),"\n}).listen(5000, () => {",Object(t.b)("br",null),"\nconsole.log('run server')",Object(t.b)("br",null),"\n})")),Object(t.b)("h3",null,"模拟nginx反向代理"),Object(t.b)(a.a,{mdxType:"P"},"监听同一个端口，根据上下文，分发到不同的服务上。",Object(t.b)("br",null),"代理机和两台服务分别跑在8080，3000，3001端口。",Object(t.b)("br",null),"访问:http://localhost:8080/server/1 页面显示==>server1",Object(t.b)("br",null),"访问:http://localhost:8080/server/2 页面显示==>server2",Object(t.b)("br",null)),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"代理机proxy")),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const app = require('http')\nconst httpProxy = require('http-proxy')\nconst url = require('url')\nconst proxy = httpProxy.createProxyServer()\n//代理路径映射 相当于nginx的 proxy_pass\nconst map = {\n    '/server/1': 'http://localhost:3000',\n    '/server/2': 'http://localhost:3001',\n}\napp.createServer((req, res) => {\n    const {pathname} =url.parse(req.url)\n    if (pathname === '/favicon.ico') return res.end()\n    proxy.web(req, res, {\n        target: map[pathname]\n    })\n}).listen(8080, () => {\n    console.log('run server 8080 ')\n})\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"服务机1")),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const app = require('http')\napp.createServer((req, res) => {\n    res.end('server1')\n}).listen(3000)\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"服务机2")),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"\nconst app = require('http')\napp.createServer((req, res) => {\n    res.end('server2')\n}).listen(3001)\n")))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-node-http-proxy-index-mdx-f28f993ddad4227ddcd8.js.map