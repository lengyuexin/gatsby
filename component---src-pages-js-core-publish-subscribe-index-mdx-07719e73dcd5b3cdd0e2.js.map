{"version":3,"sources":["webpack:///./src/pages/js-core/publish-subscribe/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","background","parentName","isMDXComponent"],"mappings":"4RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXF,QAAQ,KACT,uBAAK,kCAAMG,WAAW,OAAU,CAC5B,UAAa,gBADZ,y5BAkDXN,EAAWO,gBAAiB","file":"component---src-pages-js-core-publish-subscribe-index-mdx-07719e73dcd5b3cdd0e2.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bytedance/Desktop/gatsby/src/components/BlogLayout/index.js\";\nimport P from '../../../components/Panel.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`\nclass PubSub {\n  constructor() {\n    // 一个对象存放所有的消息订阅\n    // 每个消息对应一个数组，数组结构如下\n    // {\n    //   \"event1\": [cb1, cb2]\n    // }\n    this.events = {}\n  }\n\n  subscribe(event, callback) {\n    if(this.events[event]) {\n      // 如果有人订阅过了，这个键已经存在，就往里面加就好了\n      this.events[event].push(callback);\n    } else {\n      // 没人订阅过，就建一个数组，回调放进去\n      this.events[event] = [callback]\n    }\n  }\n\n  publish(event, ...args) {\n    // 取出所有订阅者的回调执行\n    const subscribedEvents = this.events[event];\n\n    if(subscribedEvents && subscribedEvents.length) {\n      subscribedEvents.forEach(callback => {\n        callback(...args);\n      });\n    }\n  }\n\n  unsubscribe(event, callback) {\n    // 删除某个订阅，保留其他订阅\n    const subscribedEvents = this.events[event];\n\n    if(subscribedEvents && subscribedEvents.length) {\n      this.events[event] = this.events[event].filter(cb => cb !== callback)\n    }\n  }\n}\n\n`}</code></pre>\n    </P>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}