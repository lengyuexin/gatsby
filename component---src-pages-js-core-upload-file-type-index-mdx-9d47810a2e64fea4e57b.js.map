{"version":3,"sources":["webpack:///./src/pages/js-core/upload-file-type/index.mdx","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","background","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"wPASaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,4BACA,YAAC,IAAD,CAAGA,QAAQ,KAAX,8GAKA,8BACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,aACXF,QAAQ,KAFX,+EAOA,gCACA,oDACA,YAAC,IAAD,CAAGC,MAAO,CACRC,WAAY,WACXF,QAAQ,KACT,uBAAK,kCAAMG,WAAW,OAAU,CAC5B,UAAa,kBADZ,kJAQP,8BACA,YAAC,IAAD,CAAGF,MAAO,CACRC,WAAY,WACXF,QAAQ,KACT,uBAAK,kCAAMG,WAAW,OAAU,CAC5B,UAAa,gBADZ,6IAQP,oCACA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,mEADT,mEAGH,yCACA,YAAC,IAAD,CAAGF,MAAO,CACRC,WAAY,WACXF,QAAQ,KACT,uBAAK,kCAAMG,WAAW,OAAU,CAC5B,UAAa,gBADZ,guBAgCP,8BACA,YAAC,IAAD,CAAGF,MAAO,CACRC,WAAY,WACXF,QAAQ,KACT,uBAAK,kCAAMG,WAAW,OAAU,CAC5B,UAAa,gBADZ,ikBAqCXN,EAAWO,gBAAiB,G,kCC9Ib,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-pages-js-core-upload-file-type-index-mdx-9d47810a2e64fea4e57b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/lengy/Desktop/gatsby-blog/src/components/BlogLayout/index.js\";\nimport P from '../../../components/Panel.js';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`前言`}</h2>\n    <P mdxType=\"P\">\n一般来说，对于上传的文件，都要做类型过滤，指定哪些类型能上传，哪些不能上传。\n最容易想到的，也是相对常用的，是直接使用文件的拓展名。\n但拓展名可以手动修改，做不到精准，比如把一个word文档由.doc改为.png\n    </P>\n    <h2>{`解决方案`}</h2>\n    <P style={{\n      background: 'lightblue'\n    }} mdxType=\"P\">\n将上传文件转为二进制形式后，再获取其前四位头文件的十六进制编码，\n根据这个就可以精准判定上传文件类型。\n对于不符合上传格式要求的，直接在客户端做处理。\n    </P>\n    <h2>{`html代码`}</h2>\n    <p>{`这里只做演示，写的比较简单，可根据实际业务场景添加字段`}</p>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-html\"\n        }}>{`<form id=\"form\">\n <p><input type=\"file\" name=\"file\" multiple id='file'></p>\n <p><input type=\"button\" value=\"上传\" id=\"btn\"></p>\n</form>\n`}</code></pre>\n    </P>\n    <h2>{`js代码`}</h2>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`let form = document.getElementById('form'); \nlet btn = document.getElementById('btn'); \nlet f = document.getElementById('file'); \n\n`}</code></pre>\n    </P>\n    <h2>{`获取文件mime类型`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/weixin_33826268/article/details/94604439\"\n      }}>{`https://blog.csdn.net/weixin_33826268/article/details/94604439`}</a></p>\n    <h2>{`getFileMimeType`}</h2>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`function getFileMimeType(file) {\n  const map = {\n      'FFD8FFE0': 'jpg',\n      '89504E47': 'png',\n      '47494638': 'gif',\n      \"52494646\": 'webp'\n  }\n\n  const reader = new FileReader();\n  reader.readAsArrayBuffer(file);\n  return new Promise((resolve, reject) => {\n      reader.onload = (event) => {\n        try {\n            let array = new Uint8Array(event.target.result);\n            array = array.slice(0, 4);\n            let arr = [...array]\n            let key = arr.map(item => item.toString(16)\n                .toUpperCase()\n                .padStart(2, '0'))\n                .join('')\n            resolve(map[key])\n\n        } catch (e) {\n            reject(e);\n        }\n      };\n  });\n}\n`}</code></pre>\n    </P>\n    <h2>{`上传逻辑`}</h2>\n    <P style={{\n      background: '#FDB99B'\n    }} mdxType=\"P\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`\nbtn.onclick = function () {\n    if (f.files.length > 1) {\n        for (const file of f.files) {\n            upload(file)\n        }\n    } else {\n        upload(f.files[0])\n    }\n}\n\nfunction upload(file) {\n  getFileMimeType(file).then(res => {\n    if (res) {\n        let fd = new FormData(form);\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"post\", '/api/uploadFiles');\n        xhr.send(fd);\n    } else {\n        alert('文件格式不符合上传要求')\n        f.value = ''\n        return\n    }\n\n  }).catch(err => {\n      console.log(err)\n  })\n}\n\n`}</code></pre>\n    </P>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}